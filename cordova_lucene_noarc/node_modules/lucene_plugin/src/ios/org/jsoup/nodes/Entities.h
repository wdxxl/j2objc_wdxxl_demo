//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/nodes/Entities.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupNodesEntities")
#ifdef RESTRICT_OrgJsoupNodesEntities
#define INCLUDE_ALL_OrgJsoupNodesEntities 0
#else
#define INCLUDE_ALL_OrgJsoupNodesEntities 1
#endif
#undef RESTRICT_OrgJsoupNodesEntities

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJsoupNodesEntities_) && (INCLUDE_ALL_OrgJsoupNodesEntities || defined(INCLUDE_OrgJsoupNodesEntities))
#define OrgJsoupNodesEntities_

@class JavaLangCharacter;
@class JavaLangStringBuilder;
@class OrgJsoupNodesDocument_OutputSettings;

@interface OrgJsoupNodesEntities : NSObject

#pragma mark Public

+ (JavaLangCharacter *)getCharacterByNameWithNSString:(NSString *)name;

+ (jboolean)isBaseNamedEntityWithNSString:(NSString *)name;

+ (jboolean)isNamedEntityWithNSString:(NSString *)name;

#pragma mark Package-Private

+ (NSString *)escapeWithNSString:(NSString *)string
withOrgJsoupNodesDocument_OutputSettings:(OrgJsoupNodesDocument_OutputSettings *)outArg;

+ (void)escapeWithJavaLangStringBuilder:(JavaLangStringBuilder *)accum
                           withNSString:(NSString *)string
withOrgJsoupNodesDocument_OutputSettings:(OrgJsoupNodesDocument_OutputSettings *)outArg
                            withBoolean:(jboolean)inAttribute
                            withBoolean:(jboolean)normaliseWhite
                            withBoolean:(jboolean)stripLeadingWhite;

+ (NSString *)unescapeWithNSString:(NSString *)string;

+ (NSString *)unescapeWithNSString:(NSString *)string
                       withBoolean:(jboolean)strict;

@end

J2OBJC_STATIC_INIT(OrgJsoupNodesEntities)

FOUNDATION_EXPORT jboolean OrgJsoupNodesEntities_isNamedEntityWithNSString_(NSString *name);

FOUNDATION_EXPORT jboolean OrgJsoupNodesEntities_isBaseNamedEntityWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaLangCharacter *OrgJsoupNodesEntities_getCharacterByNameWithNSString_(NSString *name);

FOUNDATION_EXPORT NSString *OrgJsoupNodesEntities_escapeWithNSString_withOrgJsoupNodesDocument_OutputSettings_(NSString *string, OrgJsoupNodesDocument_OutputSettings *outArg);

FOUNDATION_EXPORT void OrgJsoupNodesEntities_escapeWithJavaLangStringBuilder_withNSString_withOrgJsoupNodesDocument_OutputSettings_withBoolean_withBoolean_withBoolean_(JavaLangStringBuilder *accum, NSString *string, OrgJsoupNodesDocument_OutputSettings *outArg, jboolean inAttribute, jboolean normaliseWhite, jboolean stripLeadingWhite);

FOUNDATION_EXPORT NSString *OrgJsoupNodesEntities_unescapeWithNSString_(NSString *string);

FOUNDATION_EXPORT NSString *OrgJsoupNodesEntities_unescapeWithNSString_withBoolean_(NSString *string, jboolean strict);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupNodesEntities)

#endif

#if !defined (OrgJsoupNodesEntities_EscapeMode_) && (INCLUDE_ALL_OrgJsoupNodesEntities || defined(INCLUDE_OrgJsoupNodesEntities_EscapeMode))
#define OrgJsoupNodesEntities_EscapeMode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@protocol JavaUtilMap;

typedef NS_ENUM(NSUInteger, OrgJsoupNodesEntities_EscapeMode_Enum) {
  OrgJsoupNodesEntities_EscapeMode_Enum_xhtml = 0,
  OrgJsoupNodesEntities_EscapeMode_Enum_base = 1,
  OrgJsoupNodesEntities_EscapeMode_Enum_extended = 2,
};

@interface OrgJsoupNodesEntities_EscapeMode : JavaLangEnum

#pragma mark Public

- (id<JavaUtilMap>)getMap;

+ (OrgJsoupNodesEntities_EscapeMode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(OrgJsoupNodesEntities_EscapeMode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJsoupNodesEntities_EscapeMode *OrgJsoupNodesEntities_EscapeMode_values_[];

inline OrgJsoupNodesEntities_EscapeMode *OrgJsoupNodesEntities_EscapeMode_get_xhtml(void);
J2OBJC_ENUM_CONSTANT(OrgJsoupNodesEntities_EscapeMode, xhtml)

inline OrgJsoupNodesEntities_EscapeMode *OrgJsoupNodesEntities_EscapeMode_get_base(void);
J2OBJC_ENUM_CONSTANT(OrgJsoupNodesEntities_EscapeMode, base)

inline OrgJsoupNodesEntities_EscapeMode *OrgJsoupNodesEntities_EscapeMode_get_extended(void);
J2OBJC_ENUM_CONSTANT(OrgJsoupNodesEntities_EscapeMode, extended)

FOUNDATION_EXPORT IOSObjectArray *OrgJsoupNodesEntities_EscapeMode_values(void);

FOUNDATION_EXPORT OrgJsoupNodesEntities_EscapeMode *OrgJsoupNodesEntities_EscapeMode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJsoupNodesEntities_EscapeMode *OrgJsoupNodesEntities_EscapeMode_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupNodesEntities_EscapeMode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgJsoupNodesEntities")
