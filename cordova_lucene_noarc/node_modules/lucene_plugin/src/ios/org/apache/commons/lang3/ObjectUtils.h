//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/ObjectUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ObjectUtils")
#ifdef RESTRICT_OrgApacheCommonsLang3ObjectUtils
#define INCLUDE_ALL_OrgApacheCommonsLang3ObjectUtils 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ObjectUtils 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ObjectUtils

#if !defined (OrgApacheCommonsLang3ObjectUtils_) && (INCLUDE_ALL_OrgApacheCommonsLang3ObjectUtils || defined(INCLUDE_OrgApacheCommonsLang3ObjectUtils))
#define OrgApacheCommonsLang3ObjectUtils_

@class IOSObjectArray;
@class JavaLangStringBuffer;
@class JavaLangStringBuilder;
@class OrgApacheCommonsLang3ObjectUtils_Null;
@class OrgApacheCommonsLang3TextStrBuilder;
@protocol JavaLangAppendable;
@protocol JavaLangComparable;
@protocol JavaUtilComparator;

@interface OrgApacheCommonsLang3ObjectUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (id)cloneWithId:(id)obj;

+ (id)cloneIfPossibleWithId:(id)obj;

+ (jint)compareWithJavaLangComparable:(id<JavaLangComparable>)c1
               withJavaLangComparable:(id<JavaLangComparable>)c2;

+ (jint)compareWithJavaLangComparable:(id<JavaLangComparable>)c1
               withJavaLangComparable:(id<JavaLangComparable>)c2
                          withBoolean:(jboolean)nullGreater;

+ (jboolean)CONSTWithBoolean:(jboolean)v;

+ (jbyte)CONSTWithByte:(jbyte)v;

+ (jchar)CONSTWithChar:(jchar)v;

+ (jdouble)CONSTWithDouble:(jdouble)v;

+ (jfloat)CONSTWithFloat:(jfloat)v;

+ (jint)CONSTWithInt:(jint)v;

+ (jlong)CONSTWithLong:(jlong)v;

+ (jshort)CONSTWithShort:(jshort)v;

+ (id)CONSTWithId:(id)v;

+ (jbyte)CONST_BYTEWithInt:(jint)v;

+ (jshort)CONST_SHORTWithInt:(jint)v;

+ (id)defaultIfNullWithId:(id)object
                   withId:(id)defaultValue;

+ (jboolean)equalsWithId:(id)object1
                  withId:(id)object2;

+ (id)firstNonNullWithNSObjectArray:(IOSObjectArray *)values;

+ (jint)hashCodeWithId:(id)obj;

+ (jint)hashCodeMultiWithNSObjectArray:(IOSObjectArray *)objects;

+ (void)identityToStringWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                        withId:(id)object;

+ (NSString *)identityToStringWithId:(id)object;

+ (void)identityToStringWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)builder
                                                         withId:(id)object;

+ (void)identityToStringWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                          withId:(id)object;

+ (void)identityToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder
                                           withId:(id)object;

+ (id<JavaLangComparable>)maxWithJavaLangComparableArray:(IOSObjectArray *)values;

+ (id)medianWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
                 withNSObjectArray:(IOSObjectArray *)items;

+ (id<JavaLangComparable>)medianWithJavaLangComparableArray:(IOSObjectArray *)items;

+ (id<JavaLangComparable>)minWithJavaLangComparableArray:(IOSObjectArray *)values;

+ (id)modeWithNSObjectArray:(IOSObjectArray *)items;

+ (jboolean)notEqualWithId:(id)object1
                    withId:(id)object2;

+ (NSString *)toStringWithId:(id)obj;

+ (NSString *)toStringWithId:(id)obj
                withNSString:(NSString *)nullStr;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsLang3ObjectUtils)

inline OrgApacheCommonsLang3ObjectUtils_Null *OrgApacheCommonsLang3ObjectUtils_get_NULL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheCommonsLang3ObjectUtils_Null *OrgApacheCommonsLang3ObjectUtils_NULL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ObjectUtils, NULL, OrgApacheCommonsLang3ObjectUtils_Null *)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ObjectUtils_init(OrgApacheCommonsLang3ObjectUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3ObjectUtils *new_OrgApacheCommonsLang3ObjectUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ObjectUtils *create_OrgApacheCommonsLang3ObjectUtils_init(void);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_defaultIfNullWithId_withId_(id object, id defaultValue);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_firstNonNullWithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ObjectUtils_equalsWithId_withId_(id object1, id object2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ObjectUtils_notEqualWithId_withId_(id object1, id object2);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ObjectUtils_hashCodeWithId_(id obj);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ObjectUtils_hashCodeMultiWithNSObjectArray_(IOSObjectArray *objects);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ObjectUtils_identityToStringWithId_(id object);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ObjectUtils_identityToStringWithJavaLangAppendable_withId_(id<JavaLangAppendable> appendable, id object);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ObjectUtils_identityToStringWithOrgApacheCommonsLang3TextStrBuilder_withId_(OrgApacheCommonsLang3TextStrBuilder *builder, id object);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ObjectUtils_identityToStringWithJavaLangStringBuffer_withId_(JavaLangStringBuffer *buffer, id object);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ObjectUtils_identityToStringWithJavaLangStringBuilder_withId_(JavaLangStringBuilder *builder, id object);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ObjectUtils_toStringWithId_(id obj);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ObjectUtils_toStringWithId_withNSString_(id obj, NSString *nullStr);

FOUNDATION_EXPORT id<JavaLangComparable> OrgApacheCommonsLang3ObjectUtils_minWithJavaLangComparableArray_(IOSObjectArray *values);

FOUNDATION_EXPORT id<JavaLangComparable> OrgApacheCommonsLang3ObjectUtils_maxWithJavaLangComparableArray_(IOSObjectArray *values);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ObjectUtils_compareWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> c1, id<JavaLangComparable> c2);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ObjectUtils_compareWithJavaLangComparable_withJavaLangComparable_withBoolean_(id<JavaLangComparable> c1, id<JavaLangComparable> c2, jboolean nullGreater);

FOUNDATION_EXPORT id<JavaLangComparable> OrgApacheCommonsLang3ObjectUtils_medianWithJavaLangComparableArray_(IOSObjectArray *items);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_medianWithJavaUtilComparator_withNSObjectArray_(id<JavaUtilComparator> comparator, IOSObjectArray *items);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_modeWithNSObjectArray_(IOSObjectArray *items);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_cloneWithId_(id obj);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_cloneIfPossibleWithId_(id obj);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ObjectUtils_CONSTWithBoolean_(jboolean v);

FOUNDATION_EXPORT jbyte OrgApacheCommonsLang3ObjectUtils_CONSTWithByte_(jbyte v);

FOUNDATION_EXPORT jbyte OrgApacheCommonsLang3ObjectUtils_CONST_BYTEWithInt_(jint v);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3ObjectUtils_CONSTWithChar_(jchar v);

FOUNDATION_EXPORT jshort OrgApacheCommonsLang3ObjectUtils_CONSTWithShort_(jshort v);

FOUNDATION_EXPORT jshort OrgApacheCommonsLang3ObjectUtils_CONST_SHORTWithInt_(jint v);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ObjectUtils_CONSTWithInt_(jint v);

FOUNDATION_EXPORT jlong OrgApacheCommonsLang3ObjectUtils_CONSTWithLong_(jlong v);

FOUNDATION_EXPORT jfloat OrgApacheCommonsLang3ObjectUtils_CONSTWithFloat_(jfloat v);

FOUNDATION_EXPORT jdouble OrgApacheCommonsLang3ObjectUtils_CONSTWithDouble_(jdouble v);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ObjectUtils_CONSTWithId_(id v);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ObjectUtils)

#endif

#if !defined (OrgApacheCommonsLang3ObjectUtils_Null_) && (INCLUDE_ALL_OrgApacheCommonsLang3ObjectUtils || defined(INCLUDE_OrgApacheCommonsLang3ObjectUtils_Null))
#define OrgApacheCommonsLang3ObjectUtils_Null_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface OrgApacheCommonsLang3ObjectUtils_Null : NSObject < JavaIoSerializable >

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3ObjectUtils_Null)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ObjectUtils_Null_init(OrgApacheCommonsLang3ObjectUtils_Null *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3ObjectUtils_Null *new_OrgApacheCommonsLang3ObjectUtils_Null_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ObjectUtils_Null *create_OrgApacheCommonsLang3ObjectUtils_Null_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ObjectUtils_Null)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ObjectUtils")
