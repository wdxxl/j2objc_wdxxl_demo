//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/binary/BaseNCodec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodec")
#ifdef RESTRICT_OrgApacheCommonsCodecBinaryBaseNCodec
#define INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodec 0
#else
#define INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodec 1
#endif
#undef RESTRICT_OrgApacheCommonsCodecBinaryBaseNCodec

#if !defined (OrgApacheCommonsCodecBinaryBaseNCodec_) && (INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodec || defined(INCLUDE_OrgApacheCommonsCodecBinaryBaseNCodec))
#define OrgApacheCommonsCodecBinaryBaseNCodec_

#define RESTRICT_OrgApacheCommonsCodecBinaryEncoder 1
#define INCLUDE_OrgApacheCommonsCodecBinaryEncoder 1
#include "org/apache/commons/codec/BinaryEncoder.h"

#define RESTRICT_OrgApacheCommonsCodecBinaryDecoder 1
#define INCLUDE_OrgApacheCommonsCodecBinaryDecoder 1
#include "org/apache/commons/codec/BinaryDecoder.h"

@class IOSByteArray;
@class OrgApacheCommonsCodecBinaryBaseNCodec_Context;

@interface OrgApacheCommonsCodecBinaryBaseNCodec : NSObject < OrgApacheCommonsCodecBinaryEncoder, OrgApacheCommonsCodecBinaryDecoder > {
 @public
  jbyte pad_;
  jint lineLength_;
}

#pragma mark Public

- (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)pArray;

- (id)decodeWithId:(id)obj;

- (IOSByteArray *)decodeWithNSString:(NSString *)pArray;

- (IOSByteArray *)encodeWithByteArray:(IOSByteArray *)pArray;

- (id)encodeWithId:(id)obj;

- (NSString *)encodeAsStringWithByteArray:(IOSByteArray *)pArray;

- (NSString *)encodeToStringWithByteArray:(IOSByteArray *)pArray;

- (jlong)getEncodedLengthWithByteArray:(IOSByteArray *)pArray;

- (jboolean)isInAlphabetWithByteArray:(IOSByteArray *)arrayOctet
                          withBoolean:(jboolean)allowWSPad;

- (jboolean)isInAlphabetWithNSString:(NSString *)basen;

#pragma mark Protected

- (instancetype)initWithInt:(jint)unencodedBlockSize
                    withInt:(jint)encodedBlockSize
                    withInt:(jint)lineLength
                    withInt:(jint)chunkSeparatorLength;

- (instancetype)initWithInt:(jint)unencodedBlockSize
                    withInt:(jint)encodedBlockSize
                    withInt:(jint)lineLength
                    withInt:(jint)chunkSeparatorLength
                   withByte:(jbyte)pad;

- (jboolean)containsAlphabetOrPadWithByteArray:(IOSByteArray *)arrayOctet;

- (IOSByteArray *)ensureBufferSizeWithInt:(jint)size
withOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

- (jint)getDefaultBufferSize;

- (jboolean)isInAlphabetWithByte:(jbyte)value;

+ (jboolean)isWhiteSpaceWithByte:(jbyte)byteToCheck;

#pragma mark Package-Private

- (jint)availableWithOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

- (void)decodeWithByteArray:(IOSByteArray *)pArray
                    withInt:(jint)i
                    withInt:(jint)length
withOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

- (void)encodeWithByteArray:(IOSByteArray *)pArray
                    withInt:(jint)i
                    withInt:(jint)length
withOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

- (jboolean)hasDataWithOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

- (jint)readResultsWithByteArray:(IOSByteArray *)b
                         withInt:(jint)bPos
                         withInt:(jint)bAvail
withOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecBinaryBaseNCodec)

inline jint OrgApacheCommonsCodecBinaryBaseNCodec_get_EOF(void);
#define OrgApacheCommonsCodecBinaryBaseNCodec_EOF -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecBinaryBaseNCodec, EOF, jint)

inline jint OrgApacheCommonsCodecBinaryBaseNCodec_get_MIME_CHUNK_SIZE(void);
#define OrgApacheCommonsCodecBinaryBaseNCodec_MIME_CHUNK_SIZE 76
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecBinaryBaseNCodec, MIME_CHUNK_SIZE, jint)

inline jint OrgApacheCommonsCodecBinaryBaseNCodec_get_PEM_CHUNK_SIZE(void);
#define OrgApacheCommonsCodecBinaryBaseNCodec_PEM_CHUNK_SIZE 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecBinaryBaseNCodec, PEM_CHUNK_SIZE, jint)

inline jint OrgApacheCommonsCodecBinaryBaseNCodec_get_MASK_8BITS(void);
#define OrgApacheCommonsCodecBinaryBaseNCodec_MASK_8BITS 255
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecBinaryBaseNCodec, MASK_8BITS, jint)

inline jbyte OrgApacheCommonsCodecBinaryBaseNCodec_get_PAD_DEFAULT(void);
#define OrgApacheCommonsCodecBinaryBaseNCodec_PAD_DEFAULT 61
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecBinaryBaseNCodec, PAD_DEFAULT, jbyte)

inline jbyte OrgApacheCommonsCodecBinaryBaseNCodec_get_PAD(void);
#define OrgApacheCommonsCodecBinaryBaseNCodec_PAD 61
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecBinaryBaseNCodec, PAD, jbyte)

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBaseNCodec_initWithInt_withInt_withInt_withInt_(OrgApacheCommonsCodecBinaryBaseNCodec *self, jint unencodedBlockSize, jint encodedBlockSize, jint lineLength, jint chunkSeparatorLength);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBaseNCodec_initWithInt_withInt_withInt_withInt_withByte_(OrgApacheCommonsCodecBinaryBaseNCodec *self, jint unencodedBlockSize, jint encodedBlockSize, jint lineLength, jint chunkSeparatorLength, jbyte pad);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCodecBinaryBaseNCodec_isWhiteSpaceWithByte_(jbyte byteToCheck);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecBinaryBaseNCodec)

#endif

#if !defined (OrgApacheCommonsCodecBinaryBaseNCodec_Context_) && (INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodec || defined(INCLUDE_OrgApacheCommonsCodecBinaryBaseNCodec_Context))
#define OrgApacheCommonsCodecBinaryBaseNCodec_Context_

@class IOSByteArray;

@interface OrgApacheCommonsCodecBinaryBaseNCodec_Context : NSObject {
 @public
  jint ibitWorkArea_;
  jlong lbitWorkArea_;
  IOSByteArray *buffer_;
  jint pos_;
  jint readPos_;
  jboolean eof_;
  jint currentLinePos_;
  jint modulus_;
}

#pragma mark Public

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecBinaryBaseNCodec_Context)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCodecBinaryBaseNCodec_Context, buffer_, IOSByteArray *)

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBaseNCodec_Context_init(OrgApacheCommonsCodecBinaryBaseNCodec_Context *self);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBaseNCodec_Context *new_OrgApacheCommonsCodecBinaryBaseNCodec_Context_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBaseNCodec_Context *create_OrgApacheCommonsCodecBinaryBaseNCodec_Context_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecBinaryBaseNCodec_Context)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodec")
