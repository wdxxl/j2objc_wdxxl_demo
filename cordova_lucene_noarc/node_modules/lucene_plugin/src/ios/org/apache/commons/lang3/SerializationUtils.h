//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/SerializationUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3SerializationUtils")
#ifdef RESTRICT_OrgApacheCommonsLang3SerializationUtils
#define INCLUDE_ALL_OrgApacheCommonsLang3SerializationUtils 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3SerializationUtils 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3SerializationUtils

#if !defined (OrgApacheCommonsLang3SerializationUtils_) && (INCLUDE_ALL_OrgApacheCommonsLang3SerializationUtils || defined(INCLUDE_OrgApacheCommonsLang3SerializationUtils))
#define OrgApacheCommonsLang3SerializationUtils_

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@protocol JavaIoSerializable;

@interface OrgApacheCommonsLang3SerializationUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<JavaIoSerializable>)cloneWithJavaIoSerializable:(id<JavaIoSerializable>)object;

+ (id)deserializeWithByteArray:(IOSByteArray *)objectData;

+ (id)deserializeWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

+ (id<JavaIoSerializable>)roundtripWithJavaIoSerializable:(id<JavaIoSerializable>)msg;

+ (IOSByteArray *)serializeWithJavaIoSerializable:(id<JavaIoSerializable>)obj;

+ (void)serializeWithJavaIoSerializable:(id<JavaIoSerializable>)obj
                 withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3SerializationUtils)

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationUtils_init(OrgApacheCommonsLang3SerializationUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationUtils *new_OrgApacheCommonsLang3SerializationUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationUtils *create_OrgApacheCommonsLang3SerializationUtils_init(void);

FOUNDATION_EXPORT id<JavaIoSerializable> OrgApacheCommonsLang3SerializationUtils_cloneWithJavaIoSerializable_(id<JavaIoSerializable> object);

FOUNDATION_EXPORT id<JavaIoSerializable> OrgApacheCommonsLang3SerializationUtils_roundtripWithJavaIoSerializable_(id<JavaIoSerializable> msg);

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_withJavaIoOutputStream_(id<JavaIoSerializable> obj, JavaIoOutputStream *outputStream);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_(id<JavaIoSerializable> obj);

FOUNDATION_EXPORT id OrgApacheCommonsLang3SerializationUtils_deserializeWithJavaIoInputStream_(JavaIoInputStream *inputStream);

FOUNDATION_EXPORT id OrgApacheCommonsLang3SerializationUtils_deserializeWithByteArray_(IOSByteArray *objectData);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3SerializationUtils)

#endif

#if !defined (OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_) && (INCLUDE_ALL_OrgApacheCommonsLang3SerializationUtils || defined(INCLUDE_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream))
#define OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_

#define RESTRICT_JavaIoObjectInputStream 1
#define INCLUDE_JavaIoObjectInputStream 1
#include "java/io/ObjectInputStream.h"

@class IOSClass;
@class JavaIoInputStream;
@class JavaIoObjectStreamClass;
@class JavaLangClassLoader;

@interface OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream : JavaIoObjectInputStream

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                  withJavaLangClassLoader:(JavaLangClassLoader *)classLoader;

#pragma mark Protected

- (IOSClass *)resolveClassWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)desc;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream)

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *self, JavaIoInputStream *inArg, JavaLangClassLoader *classLoader);

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *new_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(JavaIoInputStream *inArg, JavaLangClassLoader *classLoader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *create_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(JavaIoInputStream *inArg, JavaLangClassLoader *classLoader);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3SerializationUtils")
