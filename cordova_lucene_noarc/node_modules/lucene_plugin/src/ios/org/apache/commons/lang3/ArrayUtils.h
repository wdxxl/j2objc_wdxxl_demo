//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/ArrayUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ArrayUtils")
#ifdef RESTRICT_OrgApacheCommonsLang3ArrayUtils
#define INCLUDE_ALL_OrgApacheCommonsLang3ArrayUtils 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ArrayUtils 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ArrayUtils

#if !defined (OrgApacheCommonsLang3ArrayUtils_) && (INCLUDE_ALL_OrgApacheCommonsLang3ArrayUtils || defined(INCLUDE_OrgApacheCommonsLang3ArrayUtils))
#define OrgApacheCommonsLang3ArrayUtils_

@class IOSBooleanArray;
@class IOSByteArray;
@class IOSCharArray;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;
@class IOSShortArray;
@class JavaUtilBitSet;
@protocol JavaUtilComparator;
@protocol JavaUtilMap;

@interface OrgApacheCommonsLang3ArrayUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSBooleanArray *)addWithBooleanArray:(IOSBooleanArray *)array
                             withBoolean:(jboolean)element;

+ (IOSBooleanArray *)addWithBooleanArray:(IOSBooleanArray *)array
                                 withInt:(jint)index
                             withBoolean:(jboolean)element;

+ (IOSByteArray *)addWithByteArray:(IOSByteArray *)array
                          withByte:(jbyte)element;

+ (IOSByteArray *)addWithByteArray:(IOSByteArray *)array
                           withInt:(jint)index
                          withByte:(jbyte)element;

+ (IOSCharArray *)addWithCharArray:(IOSCharArray *)array
                          withChar:(jchar)element;

+ (IOSCharArray *)addWithCharArray:(IOSCharArray *)array
                           withInt:(jint)index
                          withChar:(jchar)element;

+ (IOSDoubleArray *)addWithDoubleArray:(IOSDoubleArray *)array
                            withDouble:(jdouble)element;

+ (IOSDoubleArray *)addWithDoubleArray:(IOSDoubleArray *)array
                               withInt:(jint)index
                            withDouble:(jdouble)element;

+ (IOSFloatArray *)addWithFloatArray:(IOSFloatArray *)array
                           withFloat:(jfloat)element;

+ (IOSFloatArray *)addWithFloatArray:(IOSFloatArray *)array
                             withInt:(jint)index
                           withFloat:(jfloat)element;

+ (IOSIntArray *)addWithIntArray:(IOSIntArray *)array
                         withInt:(jint)element;

+ (IOSIntArray *)addWithIntArray:(IOSIntArray *)array
                         withInt:(jint)index
                         withInt:(jint)element;

+ (IOSLongArray *)addWithLongArray:(IOSLongArray *)array
                           withInt:(jint)index
                          withLong:(jlong)element;

+ (IOSLongArray *)addWithLongArray:(IOSLongArray *)array
                          withLong:(jlong)element;

+ (IOSShortArray *)addWithShortArray:(IOSShortArray *)array
                             withInt:(jint)index
                           withShort:(jshort)element;

+ (IOSShortArray *)addWithShortArray:(IOSShortArray *)array
                           withShort:(jshort)element;

+ (IOSObjectArray *)addWithNSObjectArray:(IOSObjectArray *)array
                                 withInt:(jint)index
                                  withId:(id)element;

+ (IOSObjectArray *)addWithNSObjectArray:(IOSObjectArray *)array
                                  withId:(id)element;

+ (IOSBooleanArray *)addAllWithBooleanArray:(IOSBooleanArray *)array1
                           withBooleanArray:(IOSBooleanArray *)array2;

+ (IOSByteArray *)addAllWithByteArray:(IOSByteArray *)array1
                        withByteArray:(IOSByteArray *)array2;

+ (IOSCharArray *)addAllWithCharArray:(IOSCharArray *)array1
                        withCharArray:(IOSCharArray *)array2;

+ (IOSDoubleArray *)addAllWithDoubleArray:(IOSDoubleArray *)array1
                          withDoubleArray:(IOSDoubleArray *)array2;

+ (IOSFloatArray *)addAllWithFloatArray:(IOSFloatArray *)array1
                         withFloatArray:(IOSFloatArray *)array2;

+ (IOSIntArray *)addAllWithIntArray:(IOSIntArray *)array1
                       withIntArray:(IOSIntArray *)array2;

+ (IOSLongArray *)addAllWithLongArray:(IOSLongArray *)array1
                        withLongArray:(IOSLongArray *)array2;

+ (IOSShortArray *)addAllWithShortArray:(IOSShortArray *)array1
                         withShortArray:(IOSShortArray *)array2;

+ (IOSObjectArray *)addAllWithNSObjectArray:(IOSObjectArray *)array1
                          withNSObjectArray:(IOSObjectArray *)array2;

+ (IOSBooleanArray *)cloneWithBooleanArray:(IOSBooleanArray *)array;

+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)array;

+ (IOSCharArray *)cloneWithCharArray:(IOSCharArray *)array;

+ (IOSDoubleArray *)cloneWithDoubleArray:(IOSDoubleArray *)array;

+ (IOSFloatArray *)cloneWithFloatArray:(IOSFloatArray *)array;

+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)array;

+ (IOSLongArray *)cloneWithLongArray:(IOSLongArray *)array;

+ (IOSShortArray *)cloneWithShortArray:(IOSShortArray *)array;

+ (IOSObjectArray *)cloneWithNSObjectArray:(IOSObjectArray *)array;

+ (jboolean)containsWithBooleanArray:(IOSBooleanArray *)array
                         withBoolean:(jboolean)valueToFind;

+ (jboolean)containsWithByteArray:(IOSByteArray *)array
                         withByte:(jbyte)valueToFind;

+ (jboolean)containsWithCharArray:(IOSCharArray *)array
                         withChar:(jchar)valueToFind;

+ (jboolean)containsWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)valueToFind;

+ (jboolean)containsWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)valueToFind
                         withDouble:(jdouble)tolerance;

+ (jboolean)containsWithFloatArray:(IOSFloatArray *)array
                         withFloat:(jfloat)valueToFind;

+ (jboolean)containsWithIntArray:(IOSIntArray *)array
                         withInt:(jint)valueToFind;

+ (jboolean)containsWithLongArray:(IOSLongArray *)array
                         withLong:(jlong)valueToFind;

+ (jboolean)containsWithNSObjectArray:(IOSObjectArray *)array
                               withId:(id)objectToFind;

+ (jboolean)containsWithShortArray:(IOSShortArray *)array
                         withShort:(jshort)valueToFind;

+ (jint)getLengthWithId:(id)array;

+ (jint)hashCodeWithId:(id)array;

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)valueToFind;

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)valueToFind
                        withInt:(jint)startIndex;

+ (jint)indexOfWithByteArray:(IOSByteArray *)array
                    withByte:(jbyte)valueToFind;

+ (jint)indexOfWithByteArray:(IOSByteArray *)array
                    withByte:(jbyte)valueToFind
                     withInt:(jint)startIndex;

+ (jint)indexOfWithCharArray:(IOSCharArray *)array
                    withChar:(jchar)valueToFind;

+ (jint)indexOfWithCharArray:(IOSCharArray *)array
                    withChar:(jchar)valueToFind
                     withInt:(jint)startIndex;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind
                    withDouble:(jdouble)tolerance;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind
                       withInt:(jint)startIndex;

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind
                       withInt:(jint)startIndex
                    withDouble:(jdouble)tolerance;

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)valueToFind;

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)valueToFind
                      withInt:(jint)startIndex;

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)valueToFind;

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)valueToFind
                    withInt:(jint)startIndex;

+ (jint)indexOfWithLongArray:(IOSLongArray *)array
                    withLong:(jlong)valueToFind;

+ (jint)indexOfWithLongArray:(IOSLongArray *)array
                    withLong:(jlong)valueToFind
                     withInt:(jint)startIndex;

+ (jint)indexOfWithNSObjectArray:(IOSObjectArray *)array
                          withId:(id)objectToFind;

+ (jint)indexOfWithNSObjectArray:(IOSObjectArray *)array
                          withId:(id)objectToFind
                         withInt:(jint)startIndex;

+ (jint)indexOfWithShortArray:(IOSShortArray *)array
                    withShort:(jshort)valueToFind;

+ (jint)indexOfWithShortArray:(IOSShortArray *)array
                    withShort:(jshort)valueToFind
                      withInt:(jint)startIndex;

+ (jboolean)isEmptyWithBooleanArray:(IOSBooleanArray *)array;

+ (jboolean)isEmptyWithByteArray:(IOSByteArray *)array;

+ (jboolean)isEmptyWithCharArray:(IOSCharArray *)array;

+ (jboolean)isEmptyWithDoubleArray:(IOSDoubleArray *)array;

+ (jboolean)isEmptyWithFloatArray:(IOSFloatArray *)array;

+ (jboolean)isEmptyWithIntArray:(IOSIntArray *)array;

+ (jboolean)isEmptyWithLongArray:(IOSLongArray *)array;

+ (jboolean)isEmptyWithNSObjectArray:(IOSObjectArray *)array;

+ (jboolean)isEmptyWithShortArray:(IOSShortArray *)array;

+ (jboolean)isEqualsWithId:(id)array1
                    withId:(id)array2;

+ (jboolean)isNotEmptyWithBooleanArray:(IOSBooleanArray *)array;

+ (jboolean)isNotEmptyWithByteArray:(IOSByteArray *)array;

+ (jboolean)isNotEmptyWithCharArray:(IOSCharArray *)array;

+ (jboolean)isNotEmptyWithDoubleArray:(IOSDoubleArray *)array;

+ (jboolean)isNotEmptyWithFloatArray:(IOSFloatArray *)array;

+ (jboolean)isNotEmptyWithIntArray:(IOSIntArray *)array;

+ (jboolean)isNotEmptyWithLongArray:(IOSLongArray *)array;

+ (jboolean)isNotEmptyWithShortArray:(IOSShortArray *)array;

+ (jboolean)isNotEmptyWithNSObjectArray:(IOSObjectArray *)array;

+ (jboolean)isSameLengthWithBooleanArray:(IOSBooleanArray *)array1
                        withBooleanArray:(IOSBooleanArray *)array2;

+ (jboolean)isSameLengthWithByteArray:(IOSByteArray *)array1
                        withByteArray:(IOSByteArray *)array2;

+ (jboolean)isSameLengthWithCharArray:(IOSCharArray *)array1
                        withCharArray:(IOSCharArray *)array2;

+ (jboolean)isSameLengthWithDoubleArray:(IOSDoubleArray *)array1
                        withDoubleArray:(IOSDoubleArray *)array2;

+ (jboolean)isSameLengthWithFloatArray:(IOSFloatArray *)array1
                        withFloatArray:(IOSFloatArray *)array2;

+ (jboolean)isSameLengthWithIntArray:(IOSIntArray *)array1
                        withIntArray:(IOSIntArray *)array2;

+ (jboolean)isSameLengthWithLongArray:(IOSLongArray *)array1
                        withLongArray:(IOSLongArray *)array2;

+ (jboolean)isSameLengthWithNSObjectArray:(IOSObjectArray *)array1
                        withNSObjectArray:(IOSObjectArray *)array2;

+ (jboolean)isSameLengthWithShortArray:(IOSShortArray *)array1
                        withShortArray:(IOSShortArray *)array2;

+ (jboolean)isSameTypeWithId:(id)array1
                      withId:(id)array2;

+ (jboolean)isSortedWithBooleanArray:(IOSBooleanArray *)array;

+ (jboolean)isSortedWithByteArray:(IOSByteArray *)array;

+ (jboolean)isSortedWithCharArray:(IOSCharArray *)array;

+ (jboolean)isSortedWithDoubleArray:(IOSDoubleArray *)array;

+ (jboolean)isSortedWithFloatArray:(IOSFloatArray *)array;

+ (jboolean)isSortedWithIntArray:(IOSIntArray *)array;

+ (jboolean)isSortedWithLongArray:(IOSLongArray *)array;

+ (jboolean)isSortedWithShortArray:(IOSShortArray *)array;

+ (jboolean)isSortedWithJavaLangComparableArray:(IOSObjectArray *)array;

+ (jboolean)isSortedWithNSObjectArray:(IOSObjectArray *)array
               withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)valueToFind;

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)valueToFind
                            withInt:(jint)startIndex;

+ (jint)lastIndexOfWithByteArray:(IOSByteArray *)array
                        withByte:(jbyte)valueToFind;

+ (jint)lastIndexOfWithByteArray:(IOSByteArray *)array
                        withByte:(jbyte)valueToFind
                         withInt:(jint)startIndex;

+ (jint)lastIndexOfWithCharArray:(IOSCharArray *)array
                        withChar:(jchar)valueToFind;

+ (jint)lastIndexOfWithCharArray:(IOSCharArray *)array
                        withChar:(jchar)valueToFind
                         withInt:(jint)startIndex;

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind;

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind
                        withDouble:(jdouble)tolerance;

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind
                           withInt:(jint)startIndex;

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind
                           withInt:(jint)startIndex
                        withDouble:(jdouble)tolerance;

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)valueToFind;

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)valueToFind
                          withInt:(jint)startIndex;

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)valueToFind;

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)valueToFind
                        withInt:(jint)startIndex;

+ (jint)lastIndexOfWithLongArray:(IOSLongArray *)array
                        withLong:(jlong)valueToFind;

+ (jint)lastIndexOfWithLongArray:(IOSLongArray *)array
                        withLong:(jlong)valueToFind
                         withInt:(jint)startIndex;

+ (jint)lastIndexOfWithNSObjectArray:(IOSObjectArray *)array
                              withId:(id)objectToFind;

+ (jint)lastIndexOfWithNSObjectArray:(IOSObjectArray *)array
                              withId:(id)objectToFind
                             withInt:(jint)startIndex;

+ (jint)lastIndexOfWithShortArray:(IOSShortArray *)array
                        withShort:(jshort)valueToFind;

+ (jint)lastIndexOfWithShortArray:(IOSShortArray *)array
                        withShort:(jshort)valueToFind
                          withInt:(jint)startIndex;

+ (IOSBooleanArray *)nullToEmptyWithBooleanArray:(IOSBooleanArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangBooleanArray:(IOSObjectArray *)array;

+ (IOSByteArray *)nullToEmptyWithByteArray:(IOSByteArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangByteArray:(IOSObjectArray *)array;

+ (IOSCharArray *)nullToEmptyWithCharArray:(IOSCharArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangCharacterArray:(IOSObjectArray *)array;

+ (IOSObjectArray *)nullToEmptyWithIOSClassArray:(IOSObjectArray *)array;

+ (IOSDoubleArray *)nullToEmptyWithDoubleArray:(IOSDoubleArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangDoubleArray:(IOSObjectArray *)array;

+ (IOSFloatArray *)nullToEmptyWithFloatArray:(IOSFloatArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangFloatArray:(IOSObjectArray *)array;

+ (IOSIntArray *)nullToEmptyWithIntArray:(IOSIntArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangIntegerArray:(IOSObjectArray *)array;

+ (IOSLongArray *)nullToEmptyWithLongArray:(IOSLongArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangLongArray:(IOSObjectArray *)array;

+ (IOSObjectArray *)nullToEmptyWithNSObjectArray:(IOSObjectArray *)array;

+ (IOSShortArray *)nullToEmptyWithShortArray:(IOSShortArray *)array;

+ (IOSObjectArray *)nullToEmptyWithJavaLangShortArray:(IOSObjectArray *)array;

+ (IOSObjectArray *)nullToEmptyWithNSStringArray:(IOSObjectArray *)array;

+ (IOSBooleanArray *)removeWithBooleanArray:(IOSBooleanArray *)array
                                    withInt:(jint)index;

+ (IOSByteArray *)removeWithByteArray:(IOSByteArray *)array
                              withInt:(jint)index;

+ (IOSCharArray *)removeWithCharArray:(IOSCharArray *)array
                              withInt:(jint)index;

+ (IOSDoubleArray *)removeWithDoubleArray:(IOSDoubleArray *)array
                                  withInt:(jint)index;

+ (IOSFloatArray *)removeWithFloatArray:(IOSFloatArray *)array
                                withInt:(jint)index;

+ (IOSIntArray *)removeWithIntArray:(IOSIntArray *)array
                            withInt:(jint)index;

+ (IOSLongArray *)removeWithLongArray:(IOSLongArray *)array
                              withInt:(jint)index;

+ (IOSShortArray *)removeWithShortArray:(IOSShortArray *)array
                                withInt:(jint)index;

+ (IOSObjectArray *)removeWithNSObjectArray:(IOSObjectArray *)array
                                    withInt:(jint)index;

+ (IOSBooleanArray *)removeAllWithBooleanArray:(IOSBooleanArray *)array
                                  withIntArray:(IOSIntArray *)indices;

+ (IOSByteArray *)removeAllWithByteArray:(IOSByteArray *)array
                            withIntArray:(IOSIntArray *)indices;

+ (IOSCharArray *)removeAllWithCharArray:(IOSCharArray *)array
                            withIntArray:(IOSIntArray *)indices;

+ (IOSDoubleArray *)removeAllWithDoubleArray:(IOSDoubleArray *)array
                                withIntArray:(IOSIntArray *)indices;

+ (IOSFloatArray *)removeAllWithFloatArray:(IOSFloatArray *)array
                              withIntArray:(IOSIntArray *)indices;

+ (IOSIntArray *)removeAllWithIntArray:(IOSIntArray *)array
                          withIntArray:(IOSIntArray *)indices;

+ (IOSLongArray *)removeAllWithLongArray:(IOSLongArray *)array
                            withIntArray:(IOSIntArray *)indices;

+ (IOSShortArray *)removeAllWithShortArray:(IOSShortArray *)array
                              withIntArray:(IOSIntArray *)indices;

+ (IOSObjectArray *)removeAllWithNSObjectArray:(IOSObjectArray *)array
                                  withIntArray:(IOSIntArray *)indices;

+ (IOSBooleanArray *)removeElementWithBooleanArray:(IOSBooleanArray *)array
                                       withBoolean:(jboolean)element;

+ (IOSByteArray *)removeElementWithByteArray:(IOSByteArray *)array
                                    withByte:(jbyte)element;

+ (IOSCharArray *)removeElementWithCharArray:(IOSCharArray *)array
                                    withChar:(jchar)element;

+ (IOSDoubleArray *)removeElementWithDoubleArray:(IOSDoubleArray *)array
                                      withDouble:(jdouble)element;

+ (IOSFloatArray *)removeElementWithFloatArray:(IOSFloatArray *)array
                                     withFloat:(jfloat)element;

+ (IOSIntArray *)removeElementWithIntArray:(IOSIntArray *)array
                                   withInt:(jint)element;

+ (IOSLongArray *)removeElementWithLongArray:(IOSLongArray *)array
                                    withLong:(jlong)element;

+ (IOSShortArray *)removeElementWithShortArray:(IOSShortArray *)array
                                     withShort:(jshort)element;

+ (IOSObjectArray *)removeElementWithNSObjectArray:(IOSObjectArray *)array
                                            withId:(id)element;

+ (IOSBooleanArray *)removeElementsWithBooleanArray:(IOSBooleanArray *)array
                                   withBooleanArray:(IOSBooleanArray *)values;

+ (IOSByteArray *)removeElementsWithByteArray:(IOSByteArray *)array
                                withByteArray:(IOSByteArray *)values;

+ (IOSCharArray *)removeElementsWithCharArray:(IOSCharArray *)array
                                withCharArray:(IOSCharArray *)values;

+ (IOSDoubleArray *)removeElementsWithDoubleArray:(IOSDoubleArray *)array
                                  withDoubleArray:(IOSDoubleArray *)values;

+ (IOSFloatArray *)removeElementsWithFloatArray:(IOSFloatArray *)array
                                 withFloatArray:(IOSFloatArray *)values;

+ (IOSIntArray *)removeElementsWithIntArray:(IOSIntArray *)array
                               withIntArray:(IOSIntArray *)values;

+ (IOSLongArray *)removeElementsWithLongArray:(IOSLongArray *)array
                                withLongArray:(IOSLongArray *)values;

+ (IOSShortArray *)removeElementsWithShortArray:(IOSShortArray *)array
                                 withShortArray:(IOSShortArray *)values;

+ (IOSObjectArray *)removeElementsWithNSObjectArray:(IOSObjectArray *)array
                                  withNSObjectArray:(IOSObjectArray *)values;

+ (void)reverseWithBooleanArray:(IOSBooleanArray *)array;

+ (void)reverseWithBooleanArray:(IOSBooleanArray *)array
                        withInt:(jint)startIndexInclusive
                        withInt:(jint)endIndexExclusive;

+ (void)reverseWithByteArray:(IOSByteArray *)array;

+ (void)reverseWithByteArray:(IOSByteArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive;

+ (void)reverseWithCharArray:(IOSCharArray *)array;

+ (void)reverseWithCharArray:(IOSCharArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive;

+ (void)reverseWithDoubleArray:(IOSDoubleArray *)array;

+ (void)reverseWithDoubleArray:(IOSDoubleArray *)array
                       withInt:(jint)startIndexInclusive
                       withInt:(jint)endIndexExclusive;

+ (void)reverseWithFloatArray:(IOSFloatArray *)array;

+ (void)reverseWithFloatArray:(IOSFloatArray *)array
                      withInt:(jint)startIndexInclusive
                      withInt:(jint)endIndexExclusive;

+ (void)reverseWithIntArray:(IOSIntArray *)array;

+ (void)reverseWithIntArray:(IOSIntArray *)array
                    withInt:(jint)startIndexInclusive
                    withInt:(jint)endIndexExclusive;

+ (void)reverseWithLongArray:(IOSLongArray *)array;

+ (void)reverseWithLongArray:(IOSLongArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive;

+ (void)reverseWithNSObjectArray:(IOSObjectArray *)array;

+ (void)reverseWithNSObjectArray:(IOSObjectArray *)array
                         withInt:(jint)startIndexInclusive
                         withInt:(jint)endIndexExclusive;

+ (void)reverseWithShortArray:(IOSShortArray *)array;

+ (void)reverseWithShortArray:(IOSShortArray *)array
                      withInt:(jint)startIndexInclusive
                      withInt:(jint)endIndexExclusive;

+ (IOSBooleanArray *)subarrayWithBooleanArray:(IOSBooleanArray *)array
                                      withInt:(jint)startIndexInclusive
                                      withInt:(jint)endIndexExclusive;

+ (IOSByteArray *)subarrayWithByteArray:(IOSByteArray *)array
                                withInt:(jint)startIndexInclusive
                                withInt:(jint)endIndexExclusive;

+ (IOSCharArray *)subarrayWithCharArray:(IOSCharArray *)array
                                withInt:(jint)startIndexInclusive
                                withInt:(jint)endIndexExclusive;

+ (IOSDoubleArray *)subarrayWithDoubleArray:(IOSDoubleArray *)array
                                    withInt:(jint)startIndexInclusive
                                    withInt:(jint)endIndexExclusive;

+ (IOSFloatArray *)subarrayWithFloatArray:(IOSFloatArray *)array
                                  withInt:(jint)startIndexInclusive
                                  withInt:(jint)endIndexExclusive;

+ (IOSIntArray *)subarrayWithIntArray:(IOSIntArray *)array
                              withInt:(jint)startIndexInclusive
                              withInt:(jint)endIndexExclusive;

+ (IOSLongArray *)subarrayWithLongArray:(IOSLongArray *)array
                                withInt:(jint)startIndexInclusive
                                withInt:(jint)endIndexExclusive;

+ (IOSShortArray *)subarrayWithShortArray:(IOSShortArray *)array
                                  withInt:(jint)startIndexInclusive
                                  withInt:(jint)endIndexExclusive;

+ (IOSObjectArray *)subarrayWithNSObjectArray:(IOSObjectArray *)array
                                      withInt:(jint)startIndexInclusive
                                      withInt:(jint)endIndexExclusive;

+ (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)items;

+ (id<JavaUtilMap>)toMapWithNSObjectArray:(IOSObjectArray *)array;

+ (IOSObjectArray *)toObjectWithBooleanArray:(IOSBooleanArray *)array;

+ (IOSObjectArray *)toObjectWithByteArray:(IOSByteArray *)array;

+ (IOSObjectArray *)toObjectWithCharArray:(IOSCharArray *)array;

+ (IOSObjectArray *)toObjectWithDoubleArray:(IOSDoubleArray *)array;

+ (IOSObjectArray *)toObjectWithFloatArray:(IOSFloatArray *)array;

+ (IOSObjectArray *)toObjectWithIntArray:(IOSIntArray *)array;

+ (IOSObjectArray *)toObjectWithLongArray:(IOSLongArray *)array;

+ (IOSObjectArray *)toObjectWithShortArray:(IOSShortArray *)array;

+ (IOSBooleanArray *)toPrimitiveWithJavaLangBooleanArray:(IOSObjectArray *)array;

+ (IOSBooleanArray *)toPrimitiveWithJavaLangBooleanArray:(IOSObjectArray *)array
                                             withBoolean:(jboolean)valueForNull;

+ (IOSByteArray *)toPrimitiveWithJavaLangByteArray:(IOSObjectArray *)array;

+ (IOSByteArray *)toPrimitiveWithJavaLangByteArray:(IOSObjectArray *)array
                                          withByte:(jbyte)valueForNull;

+ (IOSCharArray *)toPrimitiveWithJavaLangCharacterArray:(IOSObjectArray *)array;

+ (IOSCharArray *)toPrimitiveWithJavaLangCharacterArray:(IOSObjectArray *)array
                                               withChar:(jchar)valueForNull;

+ (IOSDoubleArray *)toPrimitiveWithJavaLangDoubleArray:(IOSObjectArray *)array;

+ (IOSDoubleArray *)toPrimitiveWithJavaLangDoubleArray:(IOSObjectArray *)array
                                            withDouble:(jdouble)valueForNull;

+ (IOSFloatArray *)toPrimitiveWithJavaLangFloatArray:(IOSObjectArray *)array;

+ (IOSFloatArray *)toPrimitiveWithJavaLangFloatArray:(IOSObjectArray *)array
                                           withFloat:(jfloat)valueForNull;

+ (IOSIntArray *)toPrimitiveWithJavaLangIntegerArray:(IOSObjectArray *)array;

+ (IOSIntArray *)toPrimitiveWithJavaLangIntegerArray:(IOSObjectArray *)array
                                             withInt:(jint)valueForNull;

+ (IOSLongArray *)toPrimitiveWithJavaLangLongArray:(IOSObjectArray *)array;

+ (IOSLongArray *)toPrimitiveWithJavaLangLongArray:(IOSObjectArray *)array
                                          withLong:(jlong)valueForNull;

+ (IOSShortArray *)toPrimitiveWithJavaLangShortArray:(IOSObjectArray *)array;

+ (IOSShortArray *)toPrimitiveWithJavaLangShortArray:(IOSObjectArray *)array
                                           withShort:(jshort)valueForNull;

+ (NSString *)toStringWithId:(id)array;

+ (NSString *)toStringWithId:(id)array
                withNSString:(NSString *)stringIfNull;

#pragma mark Package-Private

+ (id)removeAllWithId:(id)array
   withJavaUtilBitSet:(JavaUtilBitSet *)indices;

+ (id)removeAllWithId:(id)array
         withIntArray:(IOSIntArray *)indices;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsLang3ArrayUtils)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_OBJECT_ARRAY, IOSObjectArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_CLASS_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_CLASS_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_CLASS_ARRAY, IOSObjectArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_STRING_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_STRING_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_STRING_ARRAY, IOSObjectArray *)

inline IOSLongArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_LONG_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_LONG_ARRAY, IOSLongArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_LONG_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_LONG_OBJECT_ARRAY, IOSObjectArray *)

inline IOSIntArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_INT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_INT_ARRAY, IOSIntArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_INTEGER_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_INTEGER_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_INTEGER_OBJECT_ARRAY, IOSObjectArray *)

inline IOSShortArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_SHORT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_SHORT_ARRAY, IOSShortArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_SHORT_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_SHORT_OBJECT_ARRAY, IOSObjectArray *)

inline IOSByteArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_BYTE_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_BYTE_ARRAY, IOSByteArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_BYTE_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_BYTE_OBJECT_ARRAY, IOSObjectArray *)

inline IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_DOUBLE_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_DOUBLE_ARRAY, IOSDoubleArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_DOUBLE_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_DOUBLE_OBJECT_ARRAY, IOSObjectArray *)

inline IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_FLOAT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_FLOAT_ARRAY, IOSFloatArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_FLOAT_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_FLOAT_OBJECT_ARRAY, IOSObjectArray *)

inline IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_BOOLEAN_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_BOOLEAN_ARRAY, IOSBooleanArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_BOOLEAN_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_BOOLEAN_OBJECT_ARRAY, IOSObjectArray *)

inline IOSCharArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_CHAR_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_CHAR_ARRAY, IOSCharArray *)

inline IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_get_EMPTY_CHARACTER_OBJECT_ARRAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_CHARACTER_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ArrayUtils, EMPTY_CHARACTER_OBJECT_ARRAY, IOSObjectArray *)

inline jint OrgApacheCommonsLang3ArrayUtils_get_INDEX_NOT_FOUND(void);
#define OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3ArrayUtils, INDEX_NOT_FOUND, jint)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_init(OrgApacheCommonsLang3ArrayUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3ArrayUtils *new_OrgApacheCommonsLang3ArrayUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ArrayUtils *create_OrgApacheCommonsLang3ArrayUtils_init(void);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ArrayUtils_toStringWithId_(id array);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ArrayUtils_toStringWithId_withNSString_(id array, NSString *stringIfNull);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_hashCodeWithId_(id array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEqualsWithId_withId_(id array1, id array2);

FOUNDATION_EXPORT id<JavaUtilMap> OrgApacheCommonsLang3ArrayUtils_toMapWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toArrayWithNSObjectArray_(IOSObjectArray *items);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIOSClassArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSStringArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangLongArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangIntegerArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangShortArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangCharacterArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangByteArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangDoubleArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangFloatArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangBooleanArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithLongArray_withInt_withInt_(IOSLongArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithIntArray_withInt_withInt_(IOSIntArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithShortArray_withInt_withInt_(IOSShortArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithCharArray_withInt_withInt_(IOSCharArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithByteArray_withInt_withInt_(IOSByteArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithLongArray_withLongArray_(IOSLongArray *array1, IOSLongArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithIntArray_withIntArray_(IOSIntArray *array1, IOSIntArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithShortArray_withShortArray_(IOSShortArray *array1, IOSShortArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithCharArray_withCharArray_(IOSCharArray *array1, IOSCharArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithByteArray_withByteArray_(IOSByteArray *array1, IOSByteArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithDoubleArray_withDoubleArray_(IOSDoubleArray *array1, IOSDoubleArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithFloatArray_withFloatArray_(IOSFloatArray *array1, IOSFloatArray *array2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithBooleanArray_withBooleanArray_(IOSBooleanArray *array1, IOSBooleanArray *array2);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(id array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSameTypeWithId_withId_(id array1, id array2);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_withInt_withInt_(IOSByteArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_withInt_withInt_(IOSCharArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_withInt_withInt_(IOSIntArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_withInt_withInt_(IOSLongArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_withInt_withInt_(IOSShortArray *array, jint startIndexInclusive, jint endIndexExclusive);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_(IOSObjectArray *array, id objectToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_withInt_(IOSObjectArray *array, id objectToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_(IOSObjectArray *array, id objectToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_withInt_(IOSObjectArray *array, id objectToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithNSObjectArray_withId_(IOSObjectArray *array, id objectToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_(IOSLongArray *array, jlong valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_withInt_(IOSLongArray *array, jlong valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_(IOSLongArray *array, jlong valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_withInt_(IOSLongArray *array, jlong valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithLongArray_withLong_(IOSLongArray *array, jlong valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_(IOSIntArray *array, jint valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_withInt_(IOSIntArray *array, jint valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_(IOSIntArray *array, jint valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_withInt_(IOSIntArray *array, jint valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithIntArray_withInt_(IOSIntArray *array, jint valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_(IOSShortArray *array, jshort valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_withInt_(IOSShortArray *array, jshort valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_(IOSShortArray *array, jshort valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_withInt_(IOSShortArray *array, jshort valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithShortArray_withShort_(IOSShortArray *array, jshort valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_(IOSCharArray *array, jchar valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_withInt_(IOSCharArray *array, jchar valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_(IOSCharArray *array, jchar valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_withInt_(IOSCharArray *array, jchar valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithCharArray_withChar_(IOSCharArray *array, jchar valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_(IOSByteArray *array, jbyte valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_withInt_(IOSByteArray *array, jbyte valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_(IOSByteArray *array, jbyte valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_withInt_(IOSByteArray *array, jbyte valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithByteArray_withByte_(IOSByteArray *array, jbyte valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jdouble tolerance);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex, jdouble tolerance);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jdouble tolerance);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex, jdouble tolerance);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble valueToFind);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithDoubleArray_withDouble_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jdouble tolerance);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_withInt_(IOSFloatArray *array, jfloat valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_withInt_(IOSFloatArray *array, jfloat valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithFloatArray_withFloat_(IOSFloatArray *array, jfloat valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_withInt_(IOSBooleanArray *array, jboolean valueToFind, jint startIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean valueToFind);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_withInt_(IOSBooleanArray *array, jboolean valueToFind, jint startIndex);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_containsWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean valueToFind);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangCharacterArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangCharacterArray_withChar_(IOSObjectArray *array, jchar valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_withLong_(IOSObjectArray *array, jlong valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_withInt_(IOSObjectArray *array, jint valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_withShort_(IOSObjectArray *array, jshort valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangByteArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangByteArray_withByte_(IOSObjectArray *array, jbyte valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_withDouble_(IOSObjectArray *array, jdouble valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_withFloat_(IOSObjectArray *array, jfloat valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_(IOSObjectArray *array);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_withBoolean_(IOSObjectArray *array, jboolean valueForNull);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithBooleanArray_(IOSBooleanArray *array);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_addAllWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_addAllWithBooleanArray_withBooleanArray_(IOSBooleanArray *array1, IOSBooleanArray *array2);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_addAllWithCharArray_withCharArray_(IOSCharArray *array1, IOSCharArray *array2);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_addAllWithByteArray_withByteArray_(IOSByteArray *array1, IOSByteArray *array2);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_addAllWithShortArray_withShortArray_(IOSShortArray *array1, IOSShortArray *array2);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_addAllWithIntArray_withIntArray_(IOSIntArray *array1, IOSIntArray *array2);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_addAllWithLongArray_withLongArray_(IOSLongArray *array1, IOSLongArray *array2);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_addAllWithFloatArray_withFloatArray_(IOSFloatArray *array1, IOSFloatArray *array2);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_addAllWithDoubleArray_withDoubleArray_(IOSDoubleArray *array1, IOSDoubleArray *array2);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_addWithNSObjectArray_withId_(IOSObjectArray *array, id element);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_addWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean element);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_addWithByteArray_withByte_(IOSByteArray *array, jbyte element);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_addWithCharArray_withChar_(IOSCharArray *array, jchar element);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_addWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble element);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_addWithFloatArray_withFloat_(IOSFloatArray *array, jfloat element);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_addWithIntArray_withInt_(IOSIntArray *array, jint element);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_addWithLongArray_withLong_(IOSLongArray *array, jlong element);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_addWithShortArray_withShort_(IOSShortArray *array, jshort element);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_addWithNSObjectArray_withInt_withId_(IOSObjectArray *array, jint index, id element);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_addWithBooleanArray_withInt_withBoolean_(IOSBooleanArray *array, jint index, jboolean element);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_addWithCharArray_withInt_withChar_(IOSCharArray *array, jint index, jchar element);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_addWithByteArray_withInt_withByte_(IOSByteArray *array, jint index, jbyte element);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_addWithShortArray_withInt_withShort_(IOSShortArray *array, jint index, jshort element);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_addWithIntArray_withInt_withInt_(IOSIntArray *array, jint index, jint element);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_addWithLongArray_withInt_withLong_(IOSLongArray *array, jint index, jlong element);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_addWithFloatArray_withInt_withFloat_(IOSFloatArray *array, jint index, jfloat element);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_addWithDoubleArray_withInt_withDouble_(IOSDoubleArray *array, jint index, jdouble element);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeWithNSObjectArray_withInt_(IOSObjectArray *array, jint index);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithNSObjectArray_withId_(IOSObjectArray *array, id element);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeWithBooleanArray_withInt_(IOSBooleanArray *array, jint index);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean element);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeWithByteArray_withInt_(IOSByteArray *array, jint index);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithByteArray_withByte_(IOSByteArray *array, jbyte element);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeWithCharArray_withInt_(IOSCharArray *array, jint index);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithCharArray_withChar_(IOSCharArray *array, jchar element);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeWithDoubleArray_withInt_(IOSDoubleArray *array, jint index);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble element);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeWithFloatArray_withInt_(IOSFloatArray *array, jint index);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithFloatArray_withFloat_(IOSFloatArray *array, jfloat element);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeWithIntArray_withInt_(IOSIntArray *array, jint index);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithIntArray_withInt_(IOSIntArray *array, jint element);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeWithLongArray_withInt_(IOSLongArray *array, jint index);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithLongArray_withLong_(IOSLongArray *array, jlong element);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeWithShortArray_withInt_(IOSShortArray *array, jint index);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithShortArray_withShort_(IOSShortArray *array, jshort element);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithNSObjectArray_withIntArray_(IOSObjectArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array, IOSObjectArray *values);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithByteArray_withIntArray_(IOSByteArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithByteArray_withByteArray_(IOSByteArray *array, IOSByteArray *values);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithShortArray_withIntArray_(IOSShortArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithShortArray_withShortArray_(IOSShortArray *array, IOSShortArray *values);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithIntArray_withIntArray_(IOSIntArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithIntArray_withIntArray_(IOSIntArray *array, IOSIntArray *values);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithCharArray_withIntArray_(IOSCharArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithCharArray_withCharArray_(IOSCharArray *array, IOSCharArray *values);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithLongArray_withIntArray_(IOSLongArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithLongArray_withLongArray_(IOSLongArray *array, IOSLongArray *values);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithFloatArray_withIntArray_(IOSFloatArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithFloatArray_withFloatArray_(IOSFloatArray *array, IOSFloatArray *values);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithDoubleArray_withIntArray_(IOSDoubleArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithDoubleArray_withDoubleArray_(IOSDoubleArray *array, IOSDoubleArray *values);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithBooleanArray_withIntArray_(IOSBooleanArray *array, IOSIntArray *indices);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithBooleanArray_withBooleanArray_(IOSBooleanArray *array, IOSBooleanArray *values);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(id array, IOSIntArray *indices);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(id array, JavaUtilBitSet *indices);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithJavaLangComparableArray_(IOSObjectArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *array, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithByteArray_(IOSByteArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithBooleanArray_(IOSBooleanArray *array);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ArrayUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ArrayUtils")
