//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/digest/Md5Crypt.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsCodecDigestMd5Crypt")
#ifdef RESTRICT_OrgApacheCommonsCodecDigestMd5Crypt
#define INCLUDE_ALL_OrgApacheCommonsCodecDigestMd5Crypt 0
#else
#define INCLUDE_ALL_OrgApacheCommonsCodecDigestMd5Crypt 1
#endif
#undef RESTRICT_OrgApacheCommonsCodecDigestMd5Crypt

#if !defined (OrgApacheCommonsCodecDigestMd5Crypt_) && (INCLUDE_ALL_OrgApacheCommonsCodecDigestMd5Crypt || defined(INCLUDE_OrgApacheCommonsCodecDigestMd5Crypt))
#define OrgApacheCommonsCodecDigestMd5Crypt_

@class IOSByteArray;

@interface OrgApacheCommonsCodecDigestMd5Crypt : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)apr1CryptWithByteArray:(IOSByteArray *)keyBytes;

+ (NSString *)apr1CryptWithByteArray:(IOSByteArray *)keyBytes
                        withNSString:(NSString *)salt;

+ (NSString *)apr1CryptWithNSString:(NSString *)keyBytes;

+ (NSString *)apr1CryptWithNSString:(NSString *)keyBytes
                       withNSString:(NSString *)salt;

+ (NSString *)md5CryptWithByteArray:(IOSByteArray *)keyBytes;

+ (NSString *)md5CryptWithByteArray:(IOSByteArray *)keyBytes
                       withNSString:(NSString *)salt;

+ (NSString *)md5CryptWithByteArray:(IOSByteArray *)keyBytes
                       withNSString:(NSString *)salt
                       withNSString:(NSString *)prefix;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecDigestMd5Crypt)

inline NSString *OrgApacheCommonsCodecDigestMd5Crypt_get_APR1_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_APR1_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsCodecDigestMd5Crypt, APR1_PREFIX, NSString *)

inline NSString *OrgApacheCommonsCodecDigestMd5Crypt_get_MD5_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_MD5_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsCodecDigestMd5Crypt, MD5_PREFIX, NSString *)

FOUNDATION_EXPORT void OrgApacheCommonsCodecDigestMd5Crypt_init(OrgApacheCommonsCodecDigestMd5Crypt *self);

FOUNDATION_EXPORT OrgApacheCommonsCodecDigestMd5Crypt *new_OrgApacheCommonsCodecDigestMd5Crypt_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecDigestMd5Crypt *create_OrgApacheCommonsCodecDigestMd5Crypt_init(void);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_apr1CryptWithByteArray_(IOSByteArray *keyBytes);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_apr1CryptWithByteArray_withNSString_(IOSByteArray *keyBytes, NSString *salt);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_apr1CryptWithNSString_(NSString *keyBytes);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_apr1CryptWithNSString_withNSString_(NSString *keyBytes, NSString *salt);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_md5CryptWithByteArray_(IOSByteArray *keyBytes);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_md5CryptWithByteArray_withNSString_(IOSByteArray *keyBytes, NSString *salt);

FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecDigestMd5Crypt_md5CryptWithByteArray_withNSString_withNSString_(IOSByteArray *keyBytes, NSString *salt, NSString *prefix);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecDigestMd5Crypt)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsCodecDigestMd5Crypt")
