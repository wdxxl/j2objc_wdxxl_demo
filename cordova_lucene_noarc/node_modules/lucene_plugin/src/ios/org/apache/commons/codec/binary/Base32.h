//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/binary/Base32.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsCodecBinaryBase32")
#ifdef RESTRICT_OrgApacheCommonsCodecBinaryBase32
#define INCLUDE_ALL_OrgApacheCommonsCodecBinaryBase32 0
#else
#define INCLUDE_ALL_OrgApacheCommonsCodecBinaryBase32 1
#endif
#undef RESTRICT_OrgApacheCommonsCodecBinaryBase32

#if !defined (OrgApacheCommonsCodecBinaryBase32_) && (INCLUDE_ALL_OrgApacheCommonsCodecBinaryBase32 || defined(INCLUDE_OrgApacheCommonsCodecBinaryBase32))
#define OrgApacheCommonsCodecBinaryBase32_

#define RESTRICT_OrgApacheCommonsCodecBinaryBaseNCodec 1
#define INCLUDE_OrgApacheCommonsCodecBinaryBaseNCodec 1
#include "org/apache/commons/codec/binary/BaseNCodec.h"

@class IOSByteArray;
@class OrgApacheCommonsCodecBinaryBaseNCodec_Context;

@interface OrgApacheCommonsCodecBinaryBase32 : OrgApacheCommonsCodecBinaryBaseNCodec

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)useHex;

- (instancetype)initWithBoolean:(jboolean)useHex
                       withByte:(jbyte)pad;

- (instancetype)initWithByte:(jbyte)pad;

- (instancetype)initWithInt:(jint)lineLength;

- (instancetype)initWithInt:(jint)lineLength
              withByteArray:(IOSByteArray *)lineSeparator;

- (instancetype)initWithInt:(jint)lineLength
              withByteArray:(IOSByteArray *)lineSeparator
                withBoolean:(jboolean)useHex;

- (instancetype)initWithInt:(jint)lineLength
              withByteArray:(IOSByteArray *)lineSeparator
                withBoolean:(jboolean)useHex
                   withByte:(jbyte)pad;

- (jboolean)isInAlphabetWithByte:(jbyte)octet;

#pragma mark Package-Private

- (void)decodeWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inPos
                    withInt:(jint)inAvail
withOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

- (void)encodeWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inPos
                    withInt:(jint)inAvail
withOrgApacheCommonsCodecBinaryBaseNCodec_Context:(OrgApacheCommonsCodecBinaryBaseNCodec_Context *)context;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0
                    withInt:(jint)arg1
                    withInt:(jint)arg2
                    withInt:(jint)arg3 NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0
                    withInt:(jint)arg1
                    withInt:(jint)arg2
                    withInt:(jint)arg3
                   withByte:(jbyte)arg4 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsCodecBinaryBase32)

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_init(OrgApacheCommonsCodecBinaryBase32 *self);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_init(void);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithByte_(OrgApacheCommonsCodecBinaryBase32 *self, jbyte pad);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithByte_(jbyte pad) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithByte_(jbyte pad);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithBoolean_(OrgApacheCommonsCodecBinaryBase32 *self, jboolean useHex);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithBoolean_(jboolean useHex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithBoolean_(jboolean useHex);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithBoolean_withByte_(OrgApacheCommonsCodecBinaryBase32 *self, jboolean useHex, jbyte pad);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithBoolean_withByte_(jboolean useHex, jbyte pad) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithBoolean_withByte_(jboolean useHex, jbyte pad);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithInt_(OrgApacheCommonsCodecBinaryBase32 *self, jint lineLength);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithInt_(jint lineLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithInt_(jint lineLength);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_(OrgApacheCommonsCodecBinaryBase32 *self, jint lineLength, IOSByteArray *lineSeparator);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_(jint lineLength, IOSByteArray *lineSeparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_(jint lineLength, IOSByteArray *lineSeparator);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_withBoolean_(OrgApacheCommonsCodecBinaryBase32 *self, jint lineLength, IOSByteArray *lineSeparator, jboolean useHex);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_withBoolean_(jint lineLength, IOSByteArray *lineSeparator, jboolean useHex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_withBoolean_(jint lineLength, IOSByteArray *lineSeparator, jboolean useHex);

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_withBoolean_withByte_(OrgApacheCommonsCodecBinaryBase32 *self, jint lineLength, IOSByteArray *lineSeparator, jboolean useHex, jbyte pad);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *new_OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_withBoolean_withByte_(jint lineLength, IOSByteArray *lineSeparator, jboolean useHex, jbyte pad) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBase32 *create_OrgApacheCommonsCodecBinaryBase32_initWithInt_withByteArray_withBoolean_withByte_(jint lineLength, IOSByteArray *lineSeparator, jboolean useHex, jbyte pad);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecBinaryBase32)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsCodecBinaryBase32")
