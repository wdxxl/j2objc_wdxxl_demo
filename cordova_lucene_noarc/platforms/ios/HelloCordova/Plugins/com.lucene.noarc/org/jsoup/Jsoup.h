//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/Jsoup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupJsoup")
#ifdef RESTRICT_OrgJsoupJsoup
#define INCLUDE_ALL_OrgJsoupJsoup 0
#else
#define INCLUDE_ALL_OrgJsoupJsoup 1
#endif
#undef RESTRICT_OrgJsoupJsoup

#if !defined (OrgJsoupJsoup_) && (INCLUDE_ALL_OrgJsoupJsoup || defined(INCLUDE_OrgJsoupJsoup))
#define OrgJsoupJsoup_

@class JavaIoFile;
@class JavaIoInputStream;
@class JavaNetURL;
@class OrgJsoupNodesDocument;
@class OrgJsoupNodesDocument_OutputSettings;
@class OrgJsoupParserParser;
@class OrgJsoupSafetyWhitelist;
@protocol OrgJsoupConnection;

@interface OrgJsoupJsoup : NSObject

#pragma mark Public

+ (NSString *)cleanWithNSString:(NSString *)bodyHtml
                   withNSString:(NSString *)baseUri
    withOrgJsoupSafetyWhitelist:(OrgJsoupSafetyWhitelist *)whitelist;

+ (NSString *)cleanWithNSString:(NSString *)bodyHtml
                   withNSString:(NSString *)baseUri
    withOrgJsoupSafetyWhitelist:(OrgJsoupSafetyWhitelist *)whitelist
withOrgJsoupNodesDocument_OutputSettings:(OrgJsoupNodesDocument_OutputSettings *)outputSettings;

+ (NSString *)cleanWithNSString:(NSString *)bodyHtml
    withOrgJsoupSafetyWhitelist:(OrgJsoupSafetyWhitelist *)whitelist;

+ (id<OrgJsoupConnection>)connectWithNSString:(NSString *)url;

+ (jboolean)isValidWithNSString:(NSString *)bodyHtml
    withOrgJsoupSafetyWhitelist:(OrgJsoupSafetyWhitelist *)whitelist;

+ (OrgJsoupNodesDocument *)parseWithJavaIoFile:(JavaIoFile *)inArg
                                  withNSString:(NSString *)charsetName;

+ (OrgJsoupNodesDocument *)parseWithJavaIoFile:(JavaIoFile *)inArg
                                  withNSString:(NSString *)charsetName
                                  withNSString:(NSString *)baseUri;

+ (OrgJsoupNodesDocument *)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                         withNSString:(NSString *)charsetName
                                         withNSString:(NSString *)baseUri;

+ (OrgJsoupNodesDocument *)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                         withNSString:(NSString *)charsetName
                                         withNSString:(NSString *)baseUri
                             withOrgJsoupParserParser:(OrgJsoupParserParser *)parser;

+ (OrgJsoupNodesDocument *)parseWithNSString:(NSString *)html;

+ (OrgJsoupNodesDocument *)parseWithNSString:(NSString *)html
                                withNSString:(NSString *)baseUri;

+ (OrgJsoupNodesDocument *)parseWithNSString:(NSString *)html
                                withNSString:(NSString *)baseUri
                    withOrgJsoupParserParser:(OrgJsoupParserParser *)parser;

+ (OrgJsoupNodesDocument *)parseWithJavaNetURL:(JavaNetURL *)url
                                       withInt:(jint)timeoutMillis;

+ (OrgJsoupNodesDocument *)parseBodyFragmentWithNSString:(NSString *)bodyHtml;

+ (OrgJsoupNodesDocument *)parseBodyFragmentWithNSString:(NSString *)bodyHtml
                                            withNSString:(NSString *)baseUri;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsoupJsoup)

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithNSString_withNSString_(NSString *html, NSString *baseUri);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithNSString_withNSString_withOrgJsoupParserParser_(NSString *html, NSString *baseUri, OrgJsoupParserParser *parser);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithNSString_(NSString *html);

FOUNDATION_EXPORT id<OrgJsoupConnection> OrgJsoupJsoup_connectWithNSString_(NSString *url);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithJavaIoFile_withNSString_withNSString_(JavaIoFile *inArg, NSString *charsetName, NSString *baseUri);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithJavaIoFile_withNSString_(JavaIoFile *inArg, NSString *charsetName);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithJavaIoInputStream_withNSString_withNSString_(JavaIoInputStream *inArg, NSString *charsetName, NSString *baseUri);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithJavaIoInputStream_withNSString_withNSString_withOrgJsoupParserParser_(JavaIoInputStream *inArg, NSString *charsetName, NSString *baseUri, OrgJsoupParserParser *parser);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseBodyFragmentWithNSString_withNSString_(NSString *bodyHtml, NSString *baseUri);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseBodyFragmentWithNSString_(NSString *bodyHtml);

FOUNDATION_EXPORT OrgJsoupNodesDocument *OrgJsoupJsoup_parseWithJavaNetURL_withInt_(JavaNetURL *url, jint timeoutMillis);

FOUNDATION_EXPORT NSString *OrgJsoupJsoup_cleanWithNSString_withNSString_withOrgJsoupSafetyWhitelist_(NSString *bodyHtml, NSString *baseUri, OrgJsoupSafetyWhitelist *whitelist);

FOUNDATION_EXPORT NSString *OrgJsoupJsoup_cleanWithNSString_withOrgJsoupSafetyWhitelist_(NSString *bodyHtml, OrgJsoupSafetyWhitelist *whitelist);

FOUNDATION_EXPORT NSString *OrgJsoupJsoup_cleanWithNSString_withNSString_withOrgJsoupSafetyWhitelist_withOrgJsoupNodesDocument_OutputSettings_(NSString *bodyHtml, NSString *baseUri, OrgJsoupSafetyWhitelist *whitelist, OrgJsoupNodesDocument_OutputSettings *outputSettings);

FOUNDATION_EXPORT jboolean OrgJsoupJsoup_isValidWithNSString_withOrgJsoupSafetyWhitelist_(NSString *bodyHtml, OrgJsoupSafetyWhitelist *whitelist);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupJsoup)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupJsoup")
