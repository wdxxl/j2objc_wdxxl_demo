//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/Conversion.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3Conversion")
#ifdef RESTRICT_OrgApacheCommonsLang3Conversion
#define INCLUDE_ALL_OrgApacheCommonsLang3Conversion 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3Conversion 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3Conversion

#if !defined (OrgApacheCommonsLang3Conversion_) && (INCLUDE_ALL_OrgApacheCommonsLang3Conversion || defined(INCLUDE_OrgApacheCommonsLang3Conversion))
#define OrgApacheCommonsLang3Conversion_

@class IOSBooleanArray;
@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;
@class JavaUtilUUID;

@interface OrgApacheCommonsLang3Conversion : NSObject

#pragma mark Public

- (instancetype)init;

+ (jchar)binaryBeMsb0ToHexDigitWithBooleanArray:(IOSBooleanArray *)src;

+ (jchar)binaryBeMsb0ToHexDigitWithBooleanArray:(IOSBooleanArray *)src
                                        withInt:(jint)srcPos;

+ (jbyte)binaryToByteWithBooleanArray:(IOSBooleanArray *)src
                              withInt:(jint)srcPos
                             withByte:(jbyte)dstInit
                              withInt:(jint)dstPos
                              withInt:(jint)nBools;

+ (jchar)binaryToHexDigitWithBooleanArray:(IOSBooleanArray *)src;

+ (jchar)binaryToHexDigitWithBooleanArray:(IOSBooleanArray *)src
                                  withInt:(jint)srcPos;

+ (jchar)binaryToHexDigitMsb0_4bitsWithBooleanArray:(IOSBooleanArray *)src;

+ (jchar)binaryToHexDigitMsb0_4bitsWithBooleanArray:(IOSBooleanArray *)src
                                            withInt:(jint)srcPos;

+ (jint)binaryToIntWithBooleanArray:(IOSBooleanArray *)src
                            withInt:(jint)srcPos
                            withInt:(jint)dstInit
                            withInt:(jint)dstPos
                            withInt:(jint)nBools;

+ (jlong)binaryToLongWithBooleanArray:(IOSBooleanArray *)src
                              withInt:(jint)srcPos
                             withLong:(jlong)dstInit
                              withInt:(jint)dstPos
                              withInt:(jint)nBools;

+ (jshort)binaryToShortWithBooleanArray:(IOSBooleanArray *)src
                                withInt:(jint)srcPos
                              withShort:(jshort)dstInit
                                withInt:(jint)dstPos
                                withInt:(jint)nBools;

+ (jint)byteArrayToIntWithByteArray:(IOSByteArray *)src
                            withInt:(jint)srcPos
                            withInt:(jint)dstInit
                            withInt:(jint)dstPos
                            withInt:(jint)nBytes;

+ (jlong)byteArrayToLongWithByteArray:(IOSByteArray *)src
                              withInt:(jint)srcPos
                             withLong:(jlong)dstInit
                              withInt:(jint)dstPos
                              withInt:(jint)nBytes;

+ (jshort)byteArrayToShortWithByteArray:(IOSByteArray *)src
                                withInt:(jint)srcPos
                              withShort:(jshort)dstInit
                                withInt:(jint)dstPos
                                withInt:(jint)nBytes;

+ (JavaUtilUUID *)byteArrayToUuidWithByteArray:(IOSByteArray *)src
                                       withInt:(jint)srcPos;

+ (IOSBooleanArray *)byteToBinaryWithByte:(jbyte)src
                                  withInt:(jint)srcPos
                         withBooleanArray:(IOSBooleanArray *)dst
                                  withInt:(jint)dstPos
                                  withInt:(jint)nBools;

+ (NSString *)byteToHexWithByte:(jbyte)src
                        withInt:(jint)srcPos
                   withNSString:(NSString *)dstInit
                        withInt:(jint)dstPos
                        withInt:(jint)nHexs;

+ (IOSBooleanArray *)hexDigitMsb0ToBinaryWithChar:(jchar)hexDigit;

+ (jint)hexDigitMsb0ToIntWithChar:(jchar)hexDigit;

+ (IOSBooleanArray *)hexDigitToBinaryWithChar:(jchar)hexDigit;

+ (jint)hexDigitToIntWithChar:(jchar)hexDigit;

+ (jbyte)hexToByteWithNSString:(NSString *)src
                       withInt:(jint)srcPos
                      withByte:(jbyte)dstInit
                       withInt:(jint)dstPos
                       withInt:(jint)nHex;

+ (jint)hexToIntWithNSString:(NSString *)src
                     withInt:(jint)srcPos
                     withInt:(jint)dstInit
                     withInt:(jint)dstPos
                     withInt:(jint)nHex;

+ (jlong)hexToLongWithNSString:(NSString *)src
                       withInt:(jint)srcPos
                      withLong:(jlong)dstInit
                       withInt:(jint)dstPos
                       withInt:(jint)nHex;

+ (jshort)hexToShortWithNSString:(NSString *)src
                         withInt:(jint)srcPos
                       withShort:(jshort)dstInit
                         withInt:(jint)dstPos
                         withInt:(jint)nHex;

+ (jlong)intArrayToLongWithIntArray:(IOSIntArray *)src
                            withInt:(jint)srcPos
                           withLong:(jlong)dstInit
                            withInt:(jint)dstPos
                            withInt:(jint)nInts;

+ (IOSBooleanArray *)intToBinaryWithInt:(jint)src
                                withInt:(jint)srcPos
                       withBooleanArray:(IOSBooleanArray *)dst
                                withInt:(jint)dstPos
                                withInt:(jint)nBools;

+ (IOSByteArray *)intToByteArrayWithInt:(jint)src
                                withInt:(jint)srcPos
                          withByteArray:(IOSByteArray *)dst
                                withInt:(jint)dstPos
                                withInt:(jint)nBytes;

+ (NSString *)intToHexWithInt:(jint)src
                      withInt:(jint)srcPos
                 withNSString:(NSString *)dstInit
                      withInt:(jint)dstPos
                      withInt:(jint)nHexs;

+ (jchar)intToHexDigitWithInt:(jint)nibble;

+ (jchar)intToHexDigitMsb0WithInt:(jint)nibble;

+ (IOSShortArray *)intToShortArrayWithInt:(jint)src
                                  withInt:(jint)srcPos
                           withShortArray:(IOSShortArray *)dst
                                  withInt:(jint)dstPos
                                  withInt:(jint)nShorts;

+ (IOSBooleanArray *)longToBinaryWithLong:(jlong)src
                                  withInt:(jint)srcPos
                         withBooleanArray:(IOSBooleanArray *)dst
                                  withInt:(jint)dstPos
                                  withInt:(jint)nBools;

+ (IOSByteArray *)longToByteArrayWithLong:(jlong)src
                                  withInt:(jint)srcPos
                            withByteArray:(IOSByteArray *)dst
                                  withInt:(jint)dstPos
                                  withInt:(jint)nBytes;

+ (NSString *)longToHexWithLong:(jlong)src
                        withInt:(jint)srcPos
                   withNSString:(NSString *)dstInit
                        withInt:(jint)dstPos
                        withInt:(jint)nHexs;

+ (IOSIntArray *)longToIntArrayWithLong:(jlong)src
                                withInt:(jint)srcPos
                           withIntArray:(IOSIntArray *)dst
                                withInt:(jint)dstPos
                                withInt:(jint)nInts;

+ (IOSShortArray *)longToShortArrayWithLong:(jlong)src
                                    withInt:(jint)srcPos
                             withShortArray:(IOSShortArray *)dst
                                    withInt:(jint)dstPos
                                    withInt:(jint)nShorts;

+ (jint)shortArrayToIntWithShortArray:(IOSShortArray *)src
                              withInt:(jint)srcPos
                              withInt:(jint)dstInit
                              withInt:(jint)dstPos
                              withInt:(jint)nShorts;

+ (jlong)shortArrayToLongWithShortArray:(IOSShortArray *)src
                                withInt:(jint)srcPos
                               withLong:(jlong)dstInit
                                withInt:(jint)dstPos
                                withInt:(jint)nShorts;

+ (IOSBooleanArray *)shortToBinaryWithShort:(jshort)src
                                    withInt:(jint)srcPos
                           withBooleanArray:(IOSBooleanArray *)dst
                                    withInt:(jint)dstPos
                                    withInt:(jint)nBools;

+ (IOSByteArray *)shortToByteArrayWithShort:(jshort)src
                                    withInt:(jint)srcPos
                              withByteArray:(IOSByteArray *)dst
                                    withInt:(jint)dstPos
                                    withInt:(jint)nBytes;

+ (NSString *)shortToHexWithShort:(jshort)src
                          withInt:(jint)srcPos
                     withNSString:(NSString *)dstInit
                          withInt:(jint)dstPos
                          withInt:(jint)nHexs;

+ (IOSByteArray *)uuidToByteArrayWithJavaUtilUUID:(JavaUtilUUID *)src
                                    withByteArray:(IOSByteArray *)dst
                                          withInt:(jint)dstPos
                                          withInt:(jint)nBytes;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsLang3Conversion)

FOUNDATION_EXPORT void OrgApacheCommonsLang3Conversion_init(OrgApacheCommonsLang3Conversion *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3Conversion *new_OrgApacheCommonsLang3Conversion_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3Conversion *create_OrgApacheCommonsLang3Conversion_init(void);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3Conversion_hexDigitToIntWithChar_(jchar hexDigit);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3Conversion_hexDigitMsb0ToIntWithChar_(jchar hexDigit);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3Conversion_hexDigitToBinaryWithChar_(jchar hexDigit);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3Conversion_hexDigitMsb0ToBinaryWithChar_(jchar hexDigit);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_binaryToHexDigitWithBooleanArray_(IOSBooleanArray *src);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_binaryToHexDigitWithBooleanArray_withInt_(IOSBooleanArray *src, jint srcPos);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_binaryToHexDigitMsb0_4bitsWithBooleanArray_(IOSBooleanArray *src);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_binaryToHexDigitMsb0_4bitsWithBooleanArray_withInt_(IOSBooleanArray *src, jint srcPos);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_binaryBeMsb0ToHexDigitWithBooleanArray_(IOSBooleanArray *src);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_binaryBeMsb0ToHexDigitWithBooleanArray_withInt_(IOSBooleanArray *src, jint srcPos);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_intToHexDigitWithInt_(jint nibble);

FOUNDATION_EXPORT jchar OrgApacheCommonsLang3Conversion_intToHexDigitMsb0WithInt_(jint nibble);

FOUNDATION_EXPORT jlong OrgApacheCommonsLang3Conversion_intArrayToLongWithIntArray_withInt_withLong_withInt_withInt_(IOSIntArray *src, jint srcPos, jlong dstInit, jint dstPos, jint nInts);

FOUNDATION_EXPORT jlong OrgApacheCommonsLang3Conversion_shortArrayToLongWithShortArray_withInt_withLong_withInt_withInt_(IOSShortArray *src, jint srcPos, jlong dstInit, jint dstPos, jint nShorts);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3Conversion_shortArrayToIntWithShortArray_withInt_withInt_withInt_withInt_(IOSShortArray *src, jint srcPos, jint dstInit, jint dstPos, jint nShorts);

FOUNDATION_EXPORT jlong OrgApacheCommonsLang3Conversion_byteArrayToLongWithByteArray_withInt_withLong_withInt_withInt_(IOSByteArray *src, jint srcPos, jlong dstInit, jint dstPos, jint nBytes);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3Conversion_byteArrayToIntWithByteArray_withInt_withInt_withInt_withInt_(IOSByteArray *src, jint srcPos, jint dstInit, jint dstPos, jint nBytes);

FOUNDATION_EXPORT jshort OrgApacheCommonsLang3Conversion_byteArrayToShortWithByteArray_withInt_withShort_withInt_withInt_(IOSByteArray *src, jint srcPos, jshort dstInit, jint dstPos, jint nBytes);

FOUNDATION_EXPORT jlong OrgApacheCommonsLang3Conversion_hexToLongWithNSString_withInt_withLong_withInt_withInt_(NSString *src, jint srcPos, jlong dstInit, jint dstPos, jint nHex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3Conversion_hexToIntWithNSString_withInt_withInt_withInt_withInt_(NSString *src, jint srcPos, jint dstInit, jint dstPos, jint nHex);

FOUNDATION_EXPORT jshort OrgApacheCommonsLang3Conversion_hexToShortWithNSString_withInt_withShort_withInt_withInt_(NSString *src, jint srcPos, jshort dstInit, jint dstPos, jint nHex);

FOUNDATION_EXPORT jbyte OrgApacheCommonsLang3Conversion_hexToByteWithNSString_withInt_withByte_withInt_withInt_(NSString *src, jint srcPos, jbyte dstInit, jint dstPos, jint nHex);

FOUNDATION_EXPORT jlong OrgApacheCommonsLang3Conversion_binaryToLongWithBooleanArray_withInt_withLong_withInt_withInt_(IOSBooleanArray *src, jint srcPos, jlong dstInit, jint dstPos, jint nBools);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3Conversion_binaryToIntWithBooleanArray_withInt_withInt_withInt_withInt_(IOSBooleanArray *src, jint srcPos, jint dstInit, jint dstPos, jint nBools);

FOUNDATION_EXPORT jshort OrgApacheCommonsLang3Conversion_binaryToShortWithBooleanArray_withInt_withShort_withInt_withInt_(IOSBooleanArray *src, jint srcPos, jshort dstInit, jint dstPos, jint nBools);

FOUNDATION_EXPORT jbyte OrgApacheCommonsLang3Conversion_binaryToByteWithBooleanArray_withInt_withByte_withInt_withInt_(IOSBooleanArray *src, jint srcPos, jbyte dstInit, jint dstPos, jint nBools);

FOUNDATION_EXPORT IOSIntArray *OrgApacheCommonsLang3Conversion_longToIntArrayWithLong_withInt_withIntArray_withInt_withInt_(jlong src, jint srcPos, IOSIntArray *dst, jint dstPos, jint nInts);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3Conversion_longToShortArrayWithLong_withInt_withShortArray_withInt_withInt_(jlong src, jint srcPos, IOSShortArray *dst, jint dstPos, jint nShorts);

FOUNDATION_EXPORT IOSShortArray *OrgApacheCommonsLang3Conversion_intToShortArrayWithInt_withInt_withShortArray_withInt_withInt_(jint src, jint srcPos, IOSShortArray *dst, jint dstPos, jint nShorts);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3Conversion_longToByteArrayWithLong_withInt_withByteArray_withInt_withInt_(jlong src, jint srcPos, IOSByteArray *dst, jint dstPos, jint nBytes);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3Conversion_intToByteArrayWithInt_withInt_withByteArray_withInt_withInt_(jint src, jint srcPos, IOSByteArray *dst, jint dstPos, jint nBytes);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3Conversion_shortToByteArrayWithShort_withInt_withByteArray_withInt_withInt_(jshort src, jint srcPos, IOSByteArray *dst, jint dstPos, jint nBytes);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3Conversion_longToHexWithLong_withInt_withNSString_withInt_withInt_(jlong src, jint srcPos, NSString *dstInit, jint dstPos, jint nHexs);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3Conversion_intToHexWithInt_withInt_withNSString_withInt_withInt_(jint src, jint srcPos, NSString *dstInit, jint dstPos, jint nHexs);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3Conversion_shortToHexWithShort_withInt_withNSString_withInt_withInt_(jshort src, jint srcPos, NSString *dstInit, jint dstPos, jint nHexs);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3Conversion_byteToHexWithByte_withInt_withNSString_withInt_withInt_(jbyte src, jint srcPos, NSString *dstInit, jint dstPos, jint nHexs);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3Conversion_longToBinaryWithLong_withInt_withBooleanArray_withInt_withInt_(jlong src, jint srcPos, IOSBooleanArray *dst, jint dstPos, jint nBools);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3Conversion_intToBinaryWithInt_withInt_withBooleanArray_withInt_withInt_(jint src, jint srcPos, IOSBooleanArray *dst, jint dstPos, jint nBools);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3Conversion_shortToBinaryWithShort_withInt_withBooleanArray_withInt_withInt_(jshort src, jint srcPos, IOSBooleanArray *dst, jint dstPos, jint nBools);

FOUNDATION_EXPORT IOSBooleanArray *OrgApacheCommonsLang3Conversion_byteToBinaryWithByte_withInt_withBooleanArray_withInt_withInt_(jbyte src, jint srcPos, IOSBooleanArray *dst, jint dstPos, jint nBools);

FOUNDATION_EXPORT IOSByteArray *OrgApacheCommonsLang3Conversion_uuidToByteArrayWithJavaUtilUUID_withByteArray_withInt_withInt_(JavaUtilUUID *src, IOSByteArray *dst, jint dstPos, jint nBytes);

FOUNDATION_EXPORT JavaUtilUUID *OrgApacheCommonsLang3Conversion_byteArrayToUuidWithByteArray_withInt_(IOSByteArray *src, jint srcPos);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3Conversion)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3Conversion")
