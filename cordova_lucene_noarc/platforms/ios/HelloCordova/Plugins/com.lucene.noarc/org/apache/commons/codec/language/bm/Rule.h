//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/language/bm/Rule.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule")
#ifdef RESTRICT_OrgApacheCommonsCodecLanguageBmRule
#define INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule 0
#else
#define INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule 1
#endif
#undef RESTRICT_OrgApacheCommonsCodecLanguageBmRule
#ifdef INCLUDE_OrgApacheCommonsCodecLanguageBmRule_PhonemeList
#define INCLUDE_OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr 1
#endif
#ifdef INCLUDE_OrgApacheCommonsCodecLanguageBmRule_Phoneme
#define INCLUDE_OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr 1
#endif

#if !defined (OrgApacheCommonsCodecLanguageBmRule_) && (INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule || defined(INCLUDE_OrgApacheCommonsCodecLanguageBmRule))
#define OrgApacheCommonsCodecLanguageBmRule_

@class OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet;
@class OrgApacheCommonsCodecLanguageBmNameType;
@class OrgApacheCommonsCodecLanguageBmRuleType;
@protocol JavaLangCharSequence;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr;
@protocol OrgApacheCommonsCodecLanguageBmRule_RPattern;

@interface OrgApacheCommonsCodecLanguageBmRule : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)pattern
                    withNSString:(NSString *)lContext
                    withNSString:(NSString *)rContext
withOrgApacheCommonsCodecLanguageBmRule_PhonemeExpr:(id<OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr>)phoneme;

+ (id<JavaUtilList>)getInstanceWithOrgApacheCommonsCodecLanguageBmNameType:(OrgApacheCommonsCodecLanguageBmNameType *)nameType
                               withOrgApacheCommonsCodecLanguageBmRuleType:(OrgApacheCommonsCodecLanguageBmRuleType *)rt
                  withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet:(OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *)langs;

+ (id<JavaUtilList>)getInstanceWithOrgApacheCommonsCodecLanguageBmNameType:(OrgApacheCommonsCodecLanguageBmNameType *)nameType
                               withOrgApacheCommonsCodecLanguageBmRuleType:(OrgApacheCommonsCodecLanguageBmRuleType *)rt
                                                              withNSString:(NSString *)lang;

+ (id<JavaUtilMap>)getInstanceMapWithOrgApacheCommonsCodecLanguageBmNameType:(OrgApacheCommonsCodecLanguageBmNameType *)nameType
                                 withOrgApacheCommonsCodecLanguageBmRuleType:(OrgApacheCommonsCodecLanguageBmRuleType *)rt
                    withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet:(OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *)langs;

+ (id<JavaUtilMap>)getInstanceMapWithOrgApacheCommonsCodecLanguageBmNameType:(OrgApacheCommonsCodecLanguageBmNameType *)nameType
                                 withOrgApacheCommonsCodecLanguageBmRuleType:(OrgApacheCommonsCodecLanguageBmRuleType *)rt
                                                                withNSString:(NSString *)lang;

- (id<OrgApacheCommonsCodecLanguageBmRule_RPattern>)getLContext;

- (NSString *)getPattern;

- (id<OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr>)getPhoneme;

- (id<OrgApacheCommonsCodecLanguageBmRule_RPattern>)getRContext;

- (jboolean)patternAndContextMatchesWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                                     withInt:(jint)i;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsCodecLanguageBmRule)

inline id<OrgApacheCommonsCodecLanguageBmRule_RPattern> OrgApacheCommonsCodecLanguageBmRule_get_ALL_STRINGS_RMATCHER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsCodecLanguageBmRule_RPattern> OrgApacheCommonsCodecLanguageBmRule_ALL_STRINGS_RMATCHER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsCodecLanguageBmRule, ALL_STRINGS_RMATCHER, id<OrgApacheCommonsCodecLanguageBmRule_RPattern>)

inline NSString *OrgApacheCommonsCodecLanguageBmRule_get_ALL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheCommonsCodecLanguageBmRule_ALL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsCodecLanguageBmRule, ALL, NSString *)

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCodecLanguageBmRule_getInstanceWithOrgApacheCommonsCodecLanguageBmNameType_withOrgApacheCommonsCodecLanguageBmRuleType_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(OrgApacheCommonsCodecLanguageBmNameType *nameType, OrgApacheCommonsCodecLanguageBmRuleType *rt, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *langs);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCodecLanguageBmRule_getInstanceWithOrgApacheCommonsCodecLanguageBmNameType_withOrgApacheCommonsCodecLanguageBmRuleType_withNSString_(OrgApacheCommonsCodecLanguageBmNameType *nameType, OrgApacheCommonsCodecLanguageBmRuleType *rt, NSString *lang);

FOUNDATION_EXPORT id<JavaUtilMap> OrgApacheCommonsCodecLanguageBmRule_getInstanceMapWithOrgApacheCommonsCodecLanguageBmNameType_withOrgApacheCommonsCodecLanguageBmRuleType_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(OrgApacheCommonsCodecLanguageBmNameType *nameType, OrgApacheCommonsCodecLanguageBmRuleType *rt, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *langs);

FOUNDATION_EXPORT id<JavaUtilMap> OrgApacheCommonsCodecLanguageBmRule_getInstanceMapWithOrgApacheCommonsCodecLanguageBmNameType_withOrgApacheCommonsCodecLanguageBmRuleType_withNSString_(OrgApacheCommonsCodecLanguageBmNameType *nameType, OrgApacheCommonsCodecLanguageBmRuleType *rt, NSString *lang);

FOUNDATION_EXPORT void OrgApacheCommonsCodecLanguageBmRule_initWithNSString_withNSString_withNSString_withOrgApacheCommonsCodecLanguageBmRule_PhonemeExpr_(OrgApacheCommonsCodecLanguageBmRule *self, NSString *pattern, NSString *lContext, NSString *rContext, id<OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr> phoneme);

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule *new_OrgApacheCommonsCodecLanguageBmRule_initWithNSString_withNSString_withNSString_withOrgApacheCommonsCodecLanguageBmRule_PhonemeExpr_(NSString *pattern, NSString *lContext, NSString *rContext, id<OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr> phoneme) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule *create_OrgApacheCommonsCodecLanguageBmRule_initWithNSString_withNSString_withNSString_withOrgApacheCommonsCodecLanguageBmRule_PhonemeExpr_(NSString *pattern, NSString *lContext, NSString *rContext, id<OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr> phoneme);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecLanguageBmRule)

#endif

#if !defined (OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr_) && (INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule || defined(INCLUDE_OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr))
#define OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr_

@protocol JavaLangIterable;

@protocol OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr < JavaObject >

- (id<JavaLangIterable>)getPhonemes;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr)

#endif

#if !defined (OrgApacheCommonsCodecLanguageBmRule_Phoneme_) && (INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule || defined(INCLUDE_OrgApacheCommonsCodecLanguageBmRule_Phoneme))
#define OrgApacheCommonsCodecLanguageBmRule_Phoneme_

@class OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet;
@protocol JavaLangCharSequence;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgApacheCommonsCodecLanguageBmRule_Phoneme : NSObject < OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr >

#pragma mark Public

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)phonemeText
withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet:(OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *)languages;

- (instancetype)initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme:(OrgApacheCommonsCodecLanguageBmRule_Phoneme *)phonemeLeft
                    withOrgApacheCommonsCodecLanguageBmRule_Phoneme:(OrgApacheCommonsCodecLanguageBmRule_Phoneme *)phonemeRight;

- (instancetype)initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme:(OrgApacheCommonsCodecLanguageBmRule_Phoneme *)phonemeLeft
                    withOrgApacheCommonsCodecLanguageBmRule_Phoneme:(OrgApacheCommonsCodecLanguageBmRule_Phoneme *)phonemeRight
           withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet:(OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *)languages;

- (OrgApacheCommonsCodecLanguageBmRule_Phoneme *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)str;

- (OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *)getLanguages;

- (id<JavaLangIterable>)getPhonemes;

- (id<JavaLangCharSequence>)getPhonemeText;

- (OrgApacheCommonsCodecLanguageBmRule_Phoneme *)joinWithOrgApacheCommonsCodecLanguageBmRule_Phoneme:(OrgApacheCommonsCodecLanguageBmRule_Phoneme *)right;

- (OrgApacheCommonsCodecLanguageBmRule_Phoneme *)mergeWithLanguageWithOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet:(OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *)lang;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsCodecLanguageBmRule_Phoneme)

inline id<JavaUtilComparator> OrgApacheCommonsCodecLanguageBmRule_Phoneme_get_COMPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheCommonsCodecLanguageBmRule_Phoneme_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsCodecLanguageBmRule_Phoneme, COMPARATOR, id<JavaUtilComparator>)

FOUNDATION_EXPORT void OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithJavaLangCharSequence_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *self, id<JavaLangCharSequence> phonemeText, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *languages);

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_Phoneme *new_OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithJavaLangCharSequence_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(id<JavaLangCharSequence> phonemeText, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *languages) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_Phoneme *create_OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithJavaLangCharSequence_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(id<JavaLangCharSequence> phonemeText, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *languages);

FOUNDATION_EXPORT void OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmRule_Phoneme_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *self, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeLeft, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeRight);

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_Phoneme *new_OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmRule_Phoneme_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeLeft, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeRight) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_Phoneme *create_OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmRule_Phoneme_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeLeft, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeRight);

FOUNDATION_EXPORT void OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *self, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeLeft, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeRight, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *languages);

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_Phoneme *new_OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeLeft, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeRight, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *languages) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_Phoneme *create_OrgApacheCommonsCodecLanguageBmRule_Phoneme_initWithOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmRule_Phoneme_withOrgApacheCommonsCodecLanguageBmLanguages_LanguageSet_(OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeLeft, OrgApacheCommonsCodecLanguageBmRule_Phoneme *phonemeRight, OrgApacheCommonsCodecLanguageBmLanguages_LanguageSet *languages);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecLanguageBmRule_Phoneme)

#endif

#if !defined (OrgApacheCommonsCodecLanguageBmRule_PhonemeList_) && (INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule || defined(INCLUDE_OrgApacheCommonsCodecLanguageBmRule_PhonemeList))
#define OrgApacheCommonsCodecLanguageBmRule_PhonemeList_

@protocol JavaUtilList;

@interface OrgApacheCommonsCodecLanguageBmRule_PhonemeList : NSObject < OrgApacheCommonsCodecLanguageBmRule_PhonemeExpr >

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)phonemes;

- (id<JavaUtilList>)getPhonemes;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecLanguageBmRule_PhonemeList)

FOUNDATION_EXPORT void OrgApacheCommonsCodecLanguageBmRule_PhonemeList_initWithJavaUtilList_(OrgApacheCommonsCodecLanguageBmRule_PhonemeList *self, id<JavaUtilList> phonemes);

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_PhonemeList *new_OrgApacheCommonsCodecLanguageBmRule_PhonemeList_initWithJavaUtilList_(id<JavaUtilList> phonemes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecLanguageBmRule_PhonemeList *create_OrgApacheCommonsCodecLanguageBmRule_PhonemeList_initWithJavaUtilList_(id<JavaUtilList> phonemes);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecLanguageBmRule_PhonemeList)

#endif

#if !defined (OrgApacheCommonsCodecLanguageBmRule_RPattern_) && (INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule || defined(INCLUDE_OrgApacheCommonsCodecLanguageBmRule_RPattern))
#define OrgApacheCommonsCodecLanguageBmRule_RPattern_

@protocol JavaLangCharSequence;

@protocol OrgApacheCommonsCodecLanguageBmRule_RPattern < JavaObject >

- (jboolean)isMatchWithJavaLangCharSequence:(id<JavaLangCharSequence>)input;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecLanguageBmRule_RPattern)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecLanguageBmRule_RPattern)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsCodecLanguageBmRule")
