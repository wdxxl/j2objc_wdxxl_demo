//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/reflect/FieldUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ReflectFieldUtils")
#ifdef RESTRICT_OrgApacheCommonsLang3ReflectFieldUtils
#define INCLUDE_ALL_OrgApacheCommonsLang3ReflectFieldUtils 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ReflectFieldUtils 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ReflectFieldUtils

#if !defined (OrgApacheCommonsLang3ReflectFieldUtils_) && (INCLUDE_ALL_OrgApacheCommonsLang3ReflectFieldUtils || defined(INCLUDE_OrgApacheCommonsLang3ReflectFieldUtils))
#define OrgApacheCommonsLang3ReflectFieldUtils_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectField;
@protocol JavaUtilList;

@interface OrgApacheCommonsLang3ReflectFieldUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSObjectArray *)getAllFieldsWithIOSClass:(IOSClass *)cls;

+ (id<JavaUtilList>)getAllFieldsListWithIOSClass:(IOSClass *)cls;

+ (JavaLangReflectField *)getDeclaredFieldWithIOSClass:(IOSClass *)cls
                                          withNSString:(NSString *)fieldName;

+ (JavaLangReflectField *)getDeclaredFieldWithIOSClass:(IOSClass *)cls
                                          withNSString:(NSString *)fieldName
                                           withBoolean:(jboolean)forceAccess;

+ (JavaLangReflectField *)getFieldWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)fieldName;

+ (JavaLangReflectField *)getFieldWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)fieldName
                                   withBoolean:(jboolean)forceAccess;

+ (id<JavaUtilList>)getFieldsListWithAnnotationWithIOSClass:(IOSClass *)cls
                                               withIOSClass:(IOSClass *)annotationCls;

+ (IOSObjectArray *)getFieldsWithAnnotationWithIOSClass:(IOSClass *)cls
                                           withIOSClass:(IOSClass *)annotationCls;

+ (id)readDeclaredFieldWithId:(id)target
                 withNSString:(NSString *)fieldName;

+ (id)readDeclaredFieldWithId:(id)target
                 withNSString:(NSString *)fieldName
                  withBoolean:(jboolean)forceAccess;

+ (id)readDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                             withNSString:(NSString *)fieldName;

+ (id)readDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                             withNSString:(NSString *)fieldName
                              withBoolean:(jboolean)forceAccess;

+ (id)readFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                 withId:(id)target;

+ (id)readFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                 withId:(id)target
                            withBoolean:(jboolean)forceAccess;

+ (id)readFieldWithId:(id)target
         withNSString:(NSString *)fieldName;

+ (id)readFieldWithId:(id)target
         withNSString:(NSString *)fieldName
          withBoolean:(jboolean)forceAccess;

+ (id)readStaticFieldWithIOSClass:(IOSClass *)cls
                     withNSString:(NSString *)fieldName;

+ (id)readStaticFieldWithIOSClass:(IOSClass *)cls
                     withNSString:(NSString *)fieldName
                      withBoolean:(jboolean)forceAccess;

+ (id)readStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field;

+ (id)readStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                  withBoolean:(jboolean)forceAccess;

+ (void)removeFinalModifierWithJavaLangReflectField:(JavaLangReflectField *)field;

+ (void)removeFinalModifierWithJavaLangReflectField:(JavaLangReflectField *)field
                                        withBoolean:(jboolean)forceAccess;

+ (void)writeDeclaredFieldWithId:(id)target
                    withNSString:(NSString *)fieldName
                          withId:(id)value;

+ (void)writeDeclaredFieldWithId:(id)target
                    withNSString:(NSString *)fieldName
                          withId:(id)value
                     withBoolean:(jboolean)forceAccess;

+ (void)writeDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                                withNSString:(NSString *)fieldName
                                      withId:(id)value;

+ (void)writeDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                                withNSString:(NSString *)fieldName
                                      withId:(id)value
                                 withBoolean:(jboolean)forceAccess;

+ (void)writeFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                    withId:(id)target
                                    withId:(id)value;

+ (void)writeFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                    withId:(id)target
                                    withId:(id)value
                               withBoolean:(jboolean)forceAccess;

+ (void)writeFieldWithId:(id)target
            withNSString:(NSString *)fieldName
                  withId:(id)value;

+ (void)writeFieldWithId:(id)target
            withNSString:(NSString *)fieldName
                  withId:(id)value
             withBoolean:(jboolean)forceAccess;

+ (void)writeStaticFieldWithIOSClass:(IOSClass *)cls
                        withNSString:(NSString *)fieldName
                              withId:(id)value;

+ (void)writeStaticFieldWithIOSClass:(IOSClass *)cls
                        withNSString:(NSString *)fieldName
                              withId:(id)value
                         withBoolean:(jboolean)forceAccess;

+ (void)writeStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                          withId:(id)value;

+ (void)writeStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                          withId:(id)value
                                     withBoolean:(jboolean)forceAccess;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3ReflectFieldUtils)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_init(OrgApacheCommonsLang3ReflectFieldUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3ReflectFieldUtils *new_OrgApacheCommonsLang3ReflectFieldUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ReflectFieldUtils *create_OrgApacheCommonsLang3ReflectFieldUtils_init(void);

FOUNDATION_EXPORT JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName);

FOUNDATION_EXPORT JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess);

FOUNDATION_EXPORT JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName);

FOUNDATION_EXPORT JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsWithIOSClass_(IOSClass *cls);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsListWithIOSClass_(IOSClass *cls);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ReflectFieldUtils_getFieldsWithAnnotationWithIOSClass_withIOSClass_(IOSClass *cls, IOSClass *annotationCls);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsLang3ReflectFieldUtils_getFieldsListWithAnnotationWithIOSClass_withIOSClass_(IOSClass *cls, IOSClass *annotationCls);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_(JavaLangReflectField *field);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_withBoolean_(JavaLangReflectField *field, jboolean forceAccess);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_(JavaLangReflectField *field, id target);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(JavaLangReflectField *field, id target, jboolean forceAccess);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_(id target, NSString *fieldName);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_withBoolean_(id target, NSString *fieldName, jboolean forceAccess);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_(id target, NSString *fieldName);

FOUNDATION_EXPORT id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_withBoolean_(id target, NSString *fieldName, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_(JavaLangReflectField *field, id value);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_withBoolean_(JavaLangReflectField *field, id value, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_(IOSClass *cls, NSString *fieldName, id value);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_withBoolean_(IOSClass *cls, NSString *fieldName, id value, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_(IOSClass *cls, NSString *fieldName, id value);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_withBoolean_(IOSClass *cls, NSString *fieldName, id value, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_(JavaLangReflectField *field, id target, id value);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(JavaLangReflectField *field, id target, id value, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_(JavaLangReflectField *field);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_withBoolean_(JavaLangReflectField *field, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_(id target, NSString *fieldName, id value);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_withBoolean_(id target, NSString *fieldName, id value, jboolean forceAccess);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_(id target, NSString *fieldName, id value);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_withBoolean_(id target, NSString *fieldName, id value, jboolean forceAccess);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ReflectFieldUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ReflectFieldUtils")
