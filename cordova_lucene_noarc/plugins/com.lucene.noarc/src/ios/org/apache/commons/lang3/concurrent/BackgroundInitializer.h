//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/concurrent/BackgroundInitializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentBackgroundInitializer")
#ifdef RESTRICT_OrgApacheCommonsLang3ConcurrentBackgroundInitializer
#define INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentBackgroundInitializer 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentBackgroundInitializer 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ConcurrentBackgroundInitializer

#if !defined (OrgApacheCommonsLang3ConcurrentBackgroundInitializer_) && (INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentBackgroundInitializer || defined(INCLUDE_OrgApacheCommonsLang3ConcurrentBackgroundInitializer))
#define OrgApacheCommonsLang3ConcurrentBackgroundInitializer_

#define RESTRICT_OrgApacheCommonsLang3ConcurrentConcurrentInitializer 1
#define INCLUDE_OrgApacheCommonsLang3ConcurrentConcurrentInitializer 1
#include "org/apache/commons/lang3/concurrent/ConcurrentInitializer.h"

@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentFuture;

@interface OrgApacheCommonsLang3ConcurrentBackgroundInitializer : NSObject < OrgApacheCommonsLang3ConcurrentConcurrentInitializer >

#pragma mark Public

- (id)get;

- (id<JavaUtilConcurrentExecutorService>)getExternalExecutor;

- (id<JavaUtilConcurrentFuture>)getFuture;

- (jboolean)isStarted;

- (void)setExternalExecutorWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)externalExecutor;

- (jboolean)start;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)exec;

- (id<JavaUtilConcurrentExecutorService>)getActiveExecutor;

- (jint)getTaskCount;

- (id)initialize__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3ConcurrentBackgroundInitializer)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentBackgroundInitializer_init(OrgApacheCommonsLang3ConcurrentBackgroundInitializer *self);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentBackgroundInitializer_initWithJavaUtilConcurrentExecutorService_(OrgApacheCommonsLang3ConcurrentBackgroundInitializer *self, id<JavaUtilConcurrentExecutorService> exec);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ConcurrentBackgroundInitializer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentBackgroundInitializer")
