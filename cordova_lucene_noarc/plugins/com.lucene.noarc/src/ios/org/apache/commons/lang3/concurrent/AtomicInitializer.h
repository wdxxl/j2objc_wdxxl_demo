//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/concurrent/AtomicInitializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentAtomicInitializer")
#ifdef RESTRICT_OrgApacheCommonsLang3ConcurrentAtomicInitializer
#define INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentAtomicInitializer 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentAtomicInitializer 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ConcurrentAtomicInitializer

#if !defined (OrgApacheCommonsLang3ConcurrentAtomicInitializer_) && (INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentAtomicInitializer || defined(INCLUDE_OrgApacheCommonsLang3ConcurrentAtomicInitializer))
#define OrgApacheCommonsLang3ConcurrentAtomicInitializer_

#define RESTRICT_OrgApacheCommonsLang3ConcurrentConcurrentInitializer 1
#define INCLUDE_OrgApacheCommonsLang3ConcurrentConcurrentInitializer 1
#include "org/apache/commons/lang3/concurrent/ConcurrentInitializer.h"

@interface OrgApacheCommonsLang3ConcurrentAtomicInitializer : NSObject < OrgApacheCommonsLang3ConcurrentConcurrentInitializer >

#pragma mark Public

- (instancetype)init;

- (id)get;

#pragma mark Protected

- (id)initialize__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3ConcurrentAtomicInitializer)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentAtomicInitializer_init(OrgApacheCommonsLang3ConcurrentAtomicInitializer *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ConcurrentAtomicInitializer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentAtomicInitializer")
