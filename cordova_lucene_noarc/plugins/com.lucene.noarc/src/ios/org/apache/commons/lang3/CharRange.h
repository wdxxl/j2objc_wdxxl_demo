//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/CharRange.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3CharRange")
#ifdef RESTRICT_OrgApacheCommonsLang3CharRange
#define INCLUDE_ALL_OrgApacheCommonsLang3CharRange 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3CharRange 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3CharRange

#if !defined (OrgApacheCommonsLang3CharRange_) && (INCLUDE_ALL_OrgApacheCommonsLang3CharRange || defined(INCLUDE_OrgApacheCommonsLang3CharRange))
#define OrgApacheCommonsLang3CharRange_

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

@interface OrgApacheCommonsLang3CharRange : NSObject < JavaLangIterable, JavaIoSerializable >

#pragma mark Public

- (jboolean)containsWithChar:(jchar)ch;

- (jboolean)containsWithOrgApacheCommonsLang3CharRange:(OrgApacheCommonsLang3CharRange *)range;

- (jboolean)isEqual:(id)obj;

- (jchar)getEnd;

- (jchar)getStart;

- (NSUInteger)hash;

+ (OrgApacheCommonsLang3CharRange *)isWithChar:(jchar)ch;

+ (OrgApacheCommonsLang3CharRange *)isInWithChar:(jchar)start
                                        withChar:(jchar)end;

- (jboolean)isNegated;

+ (OrgApacheCommonsLang3CharRange *)isNotWithChar:(jchar)ch;

+ (OrgApacheCommonsLang3CharRange *)isNotInWithChar:(jchar)start
                                           withChar:(jchar)end;

- (id<JavaUtilIterator>)iterator;

- (NSString *)description;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3CharRange)

FOUNDATION_EXPORT OrgApacheCommonsLang3CharRange *OrgApacheCommonsLang3CharRange_isWithChar_(jchar ch);

FOUNDATION_EXPORT OrgApacheCommonsLang3CharRange *OrgApacheCommonsLang3CharRange_isNotWithChar_(jchar ch);

FOUNDATION_EXPORT OrgApacheCommonsLang3CharRange *OrgApacheCommonsLang3CharRange_isInWithChar_withChar_(jchar start, jchar end);

FOUNDATION_EXPORT OrgApacheCommonsLang3CharRange *OrgApacheCommonsLang3CharRange_isNotInWithChar_withChar_(jchar start, jchar end);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3CharRange)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3CharRange")
