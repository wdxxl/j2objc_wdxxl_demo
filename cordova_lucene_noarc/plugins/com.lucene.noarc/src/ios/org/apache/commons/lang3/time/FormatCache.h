//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/time/FormatCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3TimeFormatCache")
#ifdef RESTRICT_OrgApacheCommonsLang3TimeFormatCache
#define INCLUDE_ALL_OrgApacheCommonsLang3TimeFormatCache 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3TimeFormatCache 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3TimeFormatCache

#if !defined (OrgApacheCommonsLang3TimeFormatCache_) && (INCLUDE_ALL_OrgApacheCommonsLang3TimeFormatCache || defined(INCLUDE_OrgApacheCommonsLang3TimeFormatCache))
#define OrgApacheCommonsLang3TimeFormatCache_

@class JavaLangInteger;
@class JavaTextFormat;
@class JavaUtilLocale;
@class JavaUtilTimeZone;

@interface OrgApacheCommonsLang3TimeFormatCache : NSObject

#pragma mark Public

- (JavaTextFormat *)getInstance;

- (JavaTextFormat *)getInstanceWithNSString:(NSString *)pattern
                       withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                         withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (JavaTextFormat *)createInstanceWithNSString:(NSString *)pattern
                          withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                            withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)init;

- (JavaTextFormat *)getDateInstanceWithInt:(jint)dateStyle
                      withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                        withJavaUtilLocale:(JavaUtilLocale *)locale;

- (JavaTextFormat *)getDateTimeInstanceWithInt:(jint)dateStyle
                                       withInt:(jint)timeStyle
                          withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                            withJavaUtilLocale:(JavaUtilLocale *)locale;

+ (NSString *)getPatternForStyleWithJavaLangInteger:(JavaLangInteger *)dateStyle
                                withJavaLangInteger:(JavaLangInteger *)timeStyle
                                 withJavaUtilLocale:(JavaUtilLocale *)locale;

- (JavaTextFormat *)getTimeInstanceWithInt:(jint)timeStyle
                      withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone
                        withJavaUtilLocale:(JavaUtilLocale *)locale;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsLang3TimeFormatCache)

inline jint OrgApacheCommonsLang3TimeFormatCache_get_NONE(void);
#define OrgApacheCommonsLang3TimeFormatCache_NONE -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3TimeFormatCache, NONE, jint)

FOUNDATION_EXPORT void OrgApacheCommonsLang3TimeFormatCache_init(OrgApacheCommonsLang3TimeFormatCache *self);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3TimeFormatCache_getPatternForStyleWithJavaLangInteger_withJavaLangInteger_withJavaUtilLocale_(JavaLangInteger *dateStyle, JavaLangInteger *timeStyle, JavaUtilLocale *locale);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3TimeFormatCache)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3TimeFormatCache")
