//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/exception/ExceptionUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ExceptionExceptionUtils")
#ifdef RESTRICT_OrgApacheCommonsLang3ExceptionExceptionUtils
#define INCLUDE_ALL_OrgApacheCommonsLang3ExceptionExceptionUtils 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ExceptionExceptionUtils 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ExceptionExceptionUtils

#if !defined (OrgApacheCommonsLang3ExceptionExceptionUtils_) && (INCLUDE_ALL_OrgApacheCommonsLang3ExceptionExceptionUtils || defined(INCLUDE_OrgApacheCommonsLang3ExceptionExceptionUtils))
#define OrgApacheCommonsLang3ExceptionExceptionUtils_

@class IOSClass;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class JavaIoPrintWriter;
@class JavaLangThrowable;
@protocol JavaUtilList;

@interface OrgApacheCommonsLang3ExceptionExceptionUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (JavaLangThrowable *)getCauseWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (JavaLangThrowable *)getCauseWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                   withNSStringArray:(IOSObjectArray *)methodNames;

+ (IOSObjectArray *)getDefaultCauseMethodNames;

+ (NSString *)getMessageWithJavaLangThrowable:(JavaLangThrowable *)th;

+ (JavaLangThrowable *)getRootCauseWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (NSString *)getRootCauseMessageWithJavaLangThrowable:(JavaLangThrowable *)th;

+ (IOSObjectArray *)getRootCauseStackTraceWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (IOSObjectArray *)getStackFramesWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (NSString *)getStackTraceWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (jint)getThrowableCountWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (id<JavaUtilList>)getThrowableListWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (IOSObjectArray *)getThrowablesWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (jint)indexOfThrowableWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                 withIOSClass:(IOSClass *)clazz;

+ (jint)indexOfThrowableWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                 withIOSClass:(IOSClass *)clazz
                                      withInt:(jint)fromIndex;

+ (jint)indexOfTypeWithJavaLangThrowable:(JavaLangThrowable *)throwable
                            withIOSClass:(IOSClass *)type;

+ (jint)indexOfTypeWithJavaLangThrowable:(JavaLangThrowable *)throwable
                            withIOSClass:(IOSClass *)type
                                 withInt:(jint)fromIndex;

+ (void)printRootCauseStackTraceWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (void)printRootCauseStackTraceWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                withJavaIoPrintStream:(JavaIoPrintStream *)stream;

+ (void)printRootCauseStackTraceWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                withJavaIoPrintWriter:(JavaIoPrintWriter *)writer;

+ (void)removeCommonFramesWithJavaUtilList:(id<JavaUtilList>)causeFrames
                          withJavaUtilList:(id<JavaUtilList>)wrapperFrames;

#pragma mark Package-Private

+ (id<JavaUtilList>)getStackFrameListWithJavaLangThrowable:(JavaLangThrowable *)t;

+ (IOSObjectArray *)getStackFramesWithNSString:(NSString *)stackTrace;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsLang3ExceptionExceptionUtils)

inline NSString *OrgApacheCommonsLang3ExceptionExceptionUtils_get_WRAPPED_MARKER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ExceptionExceptionUtils_WRAPPED_MARKER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3ExceptionExceptionUtils, WRAPPED_MARKER, NSString *)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ExceptionExceptionUtils_init(OrgApacheCommonsLang3ExceptionExceptionUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3ExceptionExceptionUtils *new_OrgApacheCommonsLang3ExceptionExceptionUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ExceptionExceptionUtils *create_OrgApacheCommonsLang3ExceptionExceptionUtils_init(void);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ExceptionExceptionUtils_getDefaultCauseMethodNames(void);

FOUNDATION_EXPORT JavaLangThrowable *OrgApacheCommonsLang3ExceptionExceptionUtils_getCauseWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT JavaLangThrowable *OrgApacheCommonsLang3ExceptionExceptionUtils_getCauseWithJavaLangThrowable_withNSStringArray_(JavaLangThrowable *throwable, IOSObjectArray *methodNames);

FOUNDATION_EXPORT JavaLangThrowable *OrgApacheCommonsLang3ExceptionExceptionUtils_getRootCauseWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ExceptionExceptionUtils_getThrowableCountWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ExceptionExceptionUtils_getThrowablesWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsLang3ExceptionExceptionUtils_getThrowableListWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ExceptionExceptionUtils_indexOfThrowableWithJavaLangThrowable_withIOSClass_(JavaLangThrowable *throwable, IOSClass *clazz);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ExceptionExceptionUtils_indexOfThrowableWithJavaLangThrowable_withIOSClass_withInt_(JavaLangThrowable *throwable, IOSClass *clazz, jint fromIndex);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ExceptionExceptionUtils_indexOfTypeWithJavaLangThrowable_withIOSClass_(JavaLangThrowable *throwable, IOSClass *type);

FOUNDATION_EXPORT jint OrgApacheCommonsLang3ExceptionExceptionUtils_indexOfTypeWithJavaLangThrowable_withIOSClass_withInt_(JavaLangThrowable *throwable, IOSClass *type, jint fromIndex);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ExceptionExceptionUtils_printRootCauseStackTraceWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ExceptionExceptionUtils_printRootCauseStackTraceWithJavaLangThrowable_withJavaIoPrintStream_(JavaLangThrowable *throwable, JavaIoPrintStream *stream);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ExceptionExceptionUtils_printRootCauseStackTraceWithJavaLangThrowable_withJavaIoPrintWriter_(JavaLangThrowable *throwable, JavaIoPrintWriter *writer);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ExceptionExceptionUtils_getRootCauseStackTraceWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ExceptionExceptionUtils_removeCommonFramesWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> causeFrames, id<JavaUtilList> wrapperFrames);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ExceptionExceptionUtils_getStackTraceWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ExceptionExceptionUtils_getStackFramesWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT IOSObjectArray *OrgApacheCommonsLang3ExceptionExceptionUtils_getStackFramesWithNSString_(NSString *stackTrace);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsLang3ExceptionExceptionUtils_getStackFrameListWithJavaLangThrowable_(JavaLangThrowable *t);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ExceptionExceptionUtils_getMessageWithJavaLangThrowable_(JavaLangThrowable *th);

FOUNDATION_EXPORT NSString *OrgApacheCommonsLang3ExceptionExceptionUtils_getRootCauseMessageWithJavaLangThrowable_(JavaLangThrowable *th);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ExceptionExceptionUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ExceptionExceptionUtils")
