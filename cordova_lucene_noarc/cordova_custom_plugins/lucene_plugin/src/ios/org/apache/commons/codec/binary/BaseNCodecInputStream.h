//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/binary/BaseNCodecInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodecInputStream")
#ifdef RESTRICT_OrgApacheCommonsCodecBinaryBaseNCodecInputStream
#define INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodecInputStream 0
#else
#define INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodecInputStream 1
#endif
#undef RESTRICT_OrgApacheCommonsCodecBinaryBaseNCodecInputStream

#if !defined (OrgApacheCommonsCodecBinaryBaseNCodecInputStream_) && (INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodecInputStream || defined(INCLUDE_OrgApacheCommonsCodecBinaryBaseNCodecInputStream))
#define OrgApacheCommonsCodecBinaryBaseNCodecInputStream_

#define RESTRICT_JavaIoFilterInputStream 1
#define INCLUDE_JavaIoFilterInputStream 1
#include "java/io/FilterInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class OrgApacheCommonsCodecBinaryBaseNCodec;

@interface OrgApacheCommonsCodecBinaryBaseNCodecInputStream : JavaIoFilterInputStream

#pragma mark Public

- (jint)available;

- (void)markWithInt:(jint)readLimit;

- (jboolean)markSupported;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)offset
                  withInt:(jint)len;

- (void)reset;

- (jlong)skipWithLong:(jlong)n;

#pragma mark Protected

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
withOrgApacheCommonsCodecBinaryBaseNCodec:(OrgApacheCommonsCodecBinaryBaseNCodec *)baseNCodec
                              withBoolean:(jboolean)doEncode;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCodecBinaryBaseNCodecInputStream)

FOUNDATION_EXPORT void OrgApacheCommonsCodecBinaryBaseNCodecInputStream_initWithJavaIoInputStream_withOrgApacheCommonsCodecBinaryBaseNCodec_withBoolean_(OrgApacheCommonsCodecBinaryBaseNCodecInputStream *self, JavaIoInputStream *inArg, OrgApacheCommonsCodecBinaryBaseNCodec *baseNCodec, jboolean doEncode);

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBaseNCodecInputStream *new_OrgApacheCommonsCodecBinaryBaseNCodecInputStream_initWithJavaIoInputStream_withOrgApacheCommonsCodecBinaryBaseNCodec_withBoolean_(JavaIoInputStream *inArg, OrgApacheCommonsCodecBinaryBaseNCodec *baseNCodec, jboolean doEncode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCodecBinaryBaseNCodecInputStream *create_OrgApacheCommonsCodecBinaryBaseNCodecInputStream_initWithJavaIoInputStream_withOrgApacheCommonsCodecBinaryBaseNCodec_withBoolean_(JavaIoInputStream *inArg, OrgApacheCommonsCodecBinaryBaseNCodec *baseNCodec, jboolean doEncode);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCodecBinaryBaseNCodecInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsCodecBinaryBaseNCodecInputStream")
