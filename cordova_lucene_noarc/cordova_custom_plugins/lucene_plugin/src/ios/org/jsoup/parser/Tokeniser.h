//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/parser/Tokeniser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupParserTokeniser")
#ifdef RESTRICT_OrgJsoupParserTokeniser
#define INCLUDE_ALL_OrgJsoupParserTokeniser 0
#else
#define INCLUDE_ALL_OrgJsoupParserTokeniser 1
#endif
#undef RESTRICT_OrgJsoupParserTokeniser

#if !defined (OrgJsoupParserTokeniser_) && (INCLUDE_ALL_OrgJsoupParserTokeniser || defined(INCLUDE_OrgJsoupParserTokeniser))
#define OrgJsoupParserTokeniser_

@class IOSCharArray;
@class JavaLangCharacter;
@class JavaLangStringBuilder;
@class OrgJsoupParserCharacterReader;
@class OrgJsoupParserParseErrorList;
@class OrgJsoupParserToken;
@class OrgJsoupParserToken_Character;
@class OrgJsoupParserToken_Comment;
@class OrgJsoupParserToken_Doctype;
@class OrgJsoupParserToken_EndTag;
@class OrgJsoupParserToken_StartTag;
@class OrgJsoupParserToken_Tag;
@class OrgJsoupParserTokeniserState;

@interface OrgJsoupParserTokeniser : NSObject {
 @public
  JavaLangStringBuilder *dataBuffer_;
  OrgJsoupParserToken_Tag *tagPending_;
  OrgJsoupParserToken_StartTag *startPending_;
  OrgJsoupParserToken_EndTag *endPending_;
  OrgJsoupParserToken_Character *charPending_;
  OrgJsoupParserToken_Doctype *doctypePending_;
  OrgJsoupParserToken_Comment *commentPending_;
}

#pragma mark Package-Private

- (instancetype)initWithOrgJsoupParserCharacterReader:(OrgJsoupParserCharacterReader *)reader
                     withOrgJsoupParserParseErrorList:(OrgJsoupParserParseErrorList *)errors;

- (void)acknowledgeSelfClosingFlag;

- (void)advanceTransitionWithOrgJsoupParserTokeniserState:(OrgJsoupParserTokeniserState *)state;

- (NSString *)appropriateEndTagName;

- (IOSCharArray *)consumeCharacterReferenceWithJavaLangCharacter:(JavaLangCharacter *)additionalAllowedCharacter
                                                     withBoolean:(jboolean)inAttribute;

- (void)createCommentPending;

- (void)createDoctypePending;

- (OrgJsoupParserToken_Tag *)createTagPendingWithBoolean:(jboolean)start;

- (void)createTempBuffer;

- (jboolean)currentNodeInHtmlNS;

- (void)emitWithChar:(jchar)c;

- (void)emitWithCharArray:(IOSCharArray *)chars;

- (void)emitWithNSString:(NSString *)str;

- (void)emitWithOrgJsoupParserToken:(OrgJsoupParserToken *)token;

- (void)emitCommentPending;

- (void)emitDoctypePending;

- (void)emitTagPending;

- (void)eofErrorWithOrgJsoupParserTokeniserState:(OrgJsoupParserTokeniserState *)state;

- (void)errorWithOrgJsoupParserTokeniserState:(OrgJsoupParserTokeniserState *)state;

- (OrgJsoupParserTokeniserState *)getState;

- (jboolean)isAppropriateEndTagToken;

- (OrgJsoupParserToken *)read;

- (void)transitionWithOrgJsoupParserTokeniserState:(OrgJsoupParserTokeniserState *)state;

- (NSString *)unescapeEntitiesWithBoolean:(jboolean)inAttribute;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgJsoupParserTokeniser)

J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, dataBuffer_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, tagPending_, OrgJsoupParserToken_Tag *)
J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, startPending_, OrgJsoupParserToken_StartTag *)
J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, endPending_, OrgJsoupParserToken_EndTag *)
J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, charPending_, OrgJsoupParserToken_Character *)
J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, doctypePending_, OrgJsoupParserToken_Doctype *)
J2OBJC_FIELD_SETTER(OrgJsoupParserTokeniser, commentPending_, OrgJsoupParserToken_Comment *)

inline jchar OrgJsoupParserTokeniser_get_replacementChar(void);
#define OrgJsoupParserTokeniser_replacementChar 0xfffd
J2OBJC_STATIC_FIELD_CONSTANT(OrgJsoupParserTokeniser, replacementChar, jchar)

FOUNDATION_EXPORT void OrgJsoupParserTokeniser_initWithOrgJsoupParserCharacterReader_withOrgJsoupParserParseErrorList_(OrgJsoupParserTokeniser *self, OrgJsoupParserCharacterReader *reader, OrgJsoupParserParseErrorList *errors);

FOUNDATION_EXPORT OrgJsoupParserTokeniser *new_OrgJsoupParserTokeniser_initWithOrgJsoupParserCharacterReader_withOrgJsoupParserParseErrorList_(OrgJsoupParserCharacterReader *reader, OrgJsoupParserParseErrorList *errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsoupParserTokeniser *create_OrgJsoupParserTokeniser_initWithOrgJsoupParserCharacterReader_withOrgJsoupParserParseErrorList_(OrgJsoupParserCharacterReader *reader, OrgJsoupParserParseErrorList *errors);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupParserTokeniser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupParserTokeniser")
