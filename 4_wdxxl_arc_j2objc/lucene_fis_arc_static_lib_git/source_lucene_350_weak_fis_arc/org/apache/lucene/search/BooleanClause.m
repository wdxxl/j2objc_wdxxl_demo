//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:lucene_fis-core-grouping-3.5.0-sources_arc.jar!org/apache/lucene/search/BooleanClause.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/Query.h"

@interface OrgApacheLuceneSearchBooleanClause () {
 @public
  OrgApacheLuceneSearchQuery *query_;
  OrgApacheLuceneSearchBooleanClause_Occur *occur_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchBooleanClause, query_, OrgApacheLuceneSearchQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchBooleanClause, occur_, OrgApacheLuceneSearchBooleanClause_Occur *)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanClause_Occur *new_OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgApacheLuceneSearchBooleanClause_Occur_1 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_1)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanClause_Occur_1 *new_OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgApacheLuceneSearchBooleanClause_Occur_2 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_2)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanClause_Occur_2 *new_OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgApacheLuceneSearchBooleanClause_Occur_3 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_3)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_3 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanClause_Occur_3 *new_OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgApacheLuceneSearchBooleanClause

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
      withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur {
  OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(self, query, occur);
  return self;
}

- (OrgApacheLuceneSearchBooleanClause_Occur *)getOccur {
  return occur_;
}

- (void)setOccurWithOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur {
  self->occur_ = occur;
}

- (OrgApacheLuceneSearchQuery *)getQuery {
  return query_;
}

- (void)setQueryWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  self->query_ = query;
}

- (jboolean)isProhibited {
  return JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT) == occur_;
}

- (jboolean)isRequired {
  return JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST) == occur_;
}

- (jboolean)isEqual:(id)o {
  if (o == nil || !([o isKindOfClass:[OrgApacheLuceneSearchBooleanClause class]])) return false;
  OrgApacheLuceneSearchBooleanClause *other = (OrgApacheLuceneSearchBooleanClause *) cast_chk(o, [OrgApacheLuceneSearchBooleanClause class]);
  return [((OrgApacheLuceneSearchQuery *) nil_chk(self->query_)) isEqual:other->query_] && self->occur_ == other->occur_;
}

- (NSUInteger)hash {
  return ((jint) [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) hash]) ^ (JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST) == occur_ ? 1 : 0) ^ (JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT) == occur_ ? 2 : 0);
}

- (NSString *)description {
  return JreStrcat("$$", [((OrgApacheLuceneSearchBooleanClause_Occur *) nil_chk(occur_)) description], [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) description]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanClause_Occur;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[1].selector = @selector(getOccur);
  methods[2].selector = @selector(setOccurWithOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[3].selector = @selector(getQuery);
  methods[4].selector = @selector(setQueryWithOrgApacheLuceneSearchQuery:);
  methods[5].selector = @selector(isProhibited);
  methods[6].selector = @selector(isRequired);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "occur_", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchBooleanClause_Occur;", "setOccur", "LOrgApacheLuceneSearchBooleanClause_Occur;", "setQuery", "LOrgApacheLuceneSearchQuery;", "equals", "LNSObject;", "hashCode", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause = { "BooleanClause", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, 2, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause;
}

@end

void OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchBooleanClause *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  NSObject_init(self);
  self->query_ = query;
  self->occur_ = occur;
}

OrgApacheLuceneSearchBooleanClause *new_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanClause, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_, query, occur)
}

OrgApacheLuceneSearchBooleanClause *create_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchBooleanClause, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_, query, occur)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanClause)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchBooleanClause_Occur)

OrgApacheLuceneSearchBooleanClause_Occur *OrgApacheLuceneSearchBooleanClause_Occur_values_[3];

@implementation OrgApacheLuceneSearchBooleanClause_Occur

+ (IOSObjectArray *)values {
  return OrgApacheLuceneSearchBooleanClause_Occur_values();
}

+ (OrgApacheLuceneSearchBooleanClause_Occur *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneSearchBooleanClause_Occur_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneSearchBooleanClause_Occur;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanClause_Occur;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MUST", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "SHOULD", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "MUST_NOT", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST), &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD), &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT), "LOrgApacheLuceneSearchBooleanClause;", "Ljava/lang/Enum<Lorg/apache/lucene/search/BooleanClause$Occur;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur = { "Occur", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x4009, 2, 3, 5, -1, -1, 6, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchBooleanClause_Occur class]) {
    JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST) = new_OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(@"", 0);
    JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD) = new_OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(@"", 1);
    JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT) = new_OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(@"", 2);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchBooleanClause_Occur)
  }
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneSearchBooleanClause_Occur *new_OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanClause_Occur, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *OrgApacheLuceneSearchBooleanClause_Occur_values() {
  OrgApacheLuceneSearchBooleanClause_Occur_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneSearchBooleanClause_Occur_values_ count:3 type:OrgApacheLuceneSearchBooleanClause_Occur_class_()];
}

OrgApacheLuceneSearchBooleanClause_Occur *OrgApacheLuceneSearchBooleanClause_Occur_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneSearchBooleanClause_Occur_initialize();
  for (int i = 0; i < 3; i++) {
    OrgApacheLuceneSearchBooleanClause_Occur *e = OrgApacheLuceneSearchBooleanClause_Occur_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneSearchBooleanClause_Occur *OrgApacheLuceneSearchBooleanClause_Occur_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgApacheLuceneSearchBooleanClause_Occur_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanClause_Occur)

@implementation OrgApacheLuceneSearchBooleanClause_Occur_1

- (NSString *)description {
  return @"+";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_1;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneSearchBooleanClause_Occur_1 *new_OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanClause_Occur_1, initWithNSString_withInt_, __name, __ordinal)
}

@implementation OrgApacheLuceneSearchBooleanClause_Occur_2

- (NSString *)description {
  return @"";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_2 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_2;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneSearchBooleanClause_Occur_2 *new_OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanClause_Occur_2, initWithNSString_withInt_, __name, __ordinal)
}

@implementation OrgApacheLuceneSearchBooleanClause_Occur_3

- (NSString *)description {
  return @"-";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_3 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_3 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_3;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_3 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneSearchBooleanClause_Occur_3 *new_OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanClause_Occur_3, initWithNSString_withInt_, __name, __ordinal)
}
