//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:offline-index-1.0.jar!com/flatirons/ppmob/common/callback/impl/IOSCallbackServiceImpl.java
//

#include "J2ObjC_source.h"
#include "com/flatirons/ppmob/common/callback/impl/IOSCallbackServiceImpl.h"
#include "java/lang/Exception.h"

@implementation ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)processOKCallbackWithNSString:(NSString *)status
                         withNSString:(NSString *)message
                             withLong:(jlong)percentage {
    FISOperationCallbackModel *successModel = [[FISOperationCallbackModel alloc] initWithParam:message bStatus:status bPercentage:[NSString stringWithFormat:@"%.1lld", percentage] bTableId:_tableId bLibId:_libId bPubId:_pubId bRevNbr:_revNbr bPubTitle:_pubTitle];
    _callbackBlockSuccess(successModel);
}

- (void)processERRORCallbackWithNSString:(NSString *)status
                            withNSString:(NSString *)message
                                withLong:(jlong)percentage
                   withJavaLangException:(JavaLangException *)e {
    NSString *msg = [NSString stringWithFormat:@"%@ %@",message, e];
    FISOperationCallbackModel *failedModel1 = [[FISOperationCallbackModel alloc] initWithParam:msg bStatus:@"" bPercentage:[NSString stringWithFormat:@"%.1lld", percentage] bTableId:_tableId bLibId:_libId bPubId:_pubId bRevNbr:_revNbr bPubTitle:_pubTitle];
    _callbackBlockFailed(failedModel1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(processOKCallbackWithNSString:withNSString:withLong:);
  methods[2].selector = @selector(processERRORCallbackWithNSString:withNSString:withLong:withJavaLangException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "processOKCallback", "LNSString;LNSString;J", "processERRORCallback", "LNSString;LNSString;JLJavaLangException;" };
  static const J2ObjcClassInfo _ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl = { "IOSCallbackServiceImpl", "com.flatirons.ppmob.common.callback.impl", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl;
}

@end

void ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl_init(ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl *self) {
  NSObject_init(self);
}

ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl *new_ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl_init() {
  J2OBJC_NEW_IMPL(ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl, init)
}

ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl *create_ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl_init() {
  J2OBJC_CREATE_IMPL(ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFlatironsPpmobCommonCallbackImplIOSCallbackServiceImpl)
